The BlackEnergy malware is crimeware turned APT tool and is used in significant geopolitical operations lightly documented over the past year . 
An even more interesting part of the BlackEnergy story is the relatively unknown custom plugin capabilities to attack ARM and MIPS platforms , scripts for Cisco network devices , destructive plugins , a certificate stealer and more . 
Here , we present available data - it is difficult to collect on this APT . 
We will also present more details on targets previously unavailable and present related victim profile data . 
These attackers are careful to hide and defend their long-term presence within compromised environments . 
The malware 's previously undescribed breadth means attackers present new technical challenges in unusual environments , including SCADA networks . 
Challenges , like mitigating the attackers' lateral movement across compromised network routers , may take an organization 's defenders far beyond their standard routine and out of their comfort zone . 
BlackEnergy2 and BlackEnergy3 are known tools . 
Initially , cybercriminals used BlackEnergy custom plugins for launching DDoS attacks . 
There are no indications of how many groups possess this tool . 
BlackEnergy2 was eventually seen downloading more crimeware plugins - a custom spam plugin and a banking information stealer custom plugin . 
Over time , BlackEnergy2 was assumed into the toolset of the BE2/Sandworm actor . 
While another crimeware group continues to use BlackEnergy to launch DDoS attacks , the BE2 APT appears to have used this tool exclusively throughout 2014 at victim sites and included custom plugins and scripts of their own . 
To be clear , our name for this actor has been the BE2 APT , while it has been called `` Sandworm Team '' also . 
Before evidence of BlackEnergy2 use in targeted attacks was uncovered , we tracked strange activity on one of the BlackEnergy CnC servers in 2013 . 
This strangeness was related to values listed in newer BlackEnergy configuration files . 
As described in Dmitry 's 2010 Black DDoS ' analysis , a configuration file is downloaded from the server by main.dll on an infected system . 
The config file provides download instructions for the loader . 
It also instructs the loader to pass certain commands to the plugins . 
In this particular case in 2013 , the config file included an unknown plugin set , aside from the usual 'ddos ' plugin listing . 
Displayed below are these new , xml formatted plugin names `` weap_hwi '' , `` ps '' , and `` vsnet '' in a BlackEnergy configuration file download from a c2 server . 
This new module push must have been among the first for this group , because all of the module versions were listed as `` version 1 '' , including the ddos plugin : The 'ps ' plugin turned out to be password stealer . 
The 'vsnet ' plugin was intended to spread and launch a payload ( BlackEnergy2 dropper itself at the moment ) in the local network by using PsExec , as well as gaining primary information on the user 's computer and network . 
Most surprising was the 'weap_hwi' plugin . 
It was a ddos tool compiled to run on ARM systems : At first , we did n't know whether the ARM plugin was listed intentionally or by mistake , so we proceeded to collect the CnC 's config files . 
After pulling multiple config files , we confirmed that this ARM object inclusion was not a one-off mistake . 
The server definitely delivered config files not only for Windows , but also for the ARM/MIPS platform . 
Though unusual , the ARM module was delivered by the same server and it processed the same config file . 
Over time we were able to collect several plugins as well as the main module for ARM and MIPS architectures . 
All of these ARM/MIPS object files were compiled from the same source and later pushed out in one config : `` weap_msl '' , `` weap_mps '' , `` nm_hwi '' , `` nm_mps '' , `` weap_hwi '' , and `` nm_msl '' . 
It's interesting that the BE2 developers upgraded the ddos plugin to version 2 , along with the nm_hwi , nm_mps , and nm_msl plugins . 
They simultaneously released version 5 of the weap_msl , weap_mps , and weap_hmi plugins . 
Those assignments were not likely arbitrary , as this group had developed BlackEnergy2 for several years in a professional and organized style : Here is the list of retrieved files and related functionality : The developers ' coding style differed across the 'Hook ' main module , the plugins , and the Windows main.dll . 
The hook main module contained encrypted strings and handled all the function calls and strings as the references in a large structure . 
This structure obfuscation may be a rewrite effort to better modularize the code , but could also be intended to complicate analysis . 
Regardless , it is likely that different individuals coded the different plugins . 
So , the BE2 effort must have its own small team of plugin and multiplatform developers . 
After decrypting the strings , it became clear that the Linux Hook main module communicated with the same CnC server as other Windows modules : This Linux module can process the following commands , some of which are similar to the Windows version : After the disclosure of an unusual CnC server that pushed Linux and the new Windows plugins we paid greater attention to new BE2 samples and associated CnCs . 
During an extended period , we were able to collect many Windows plugins from different CnC servers , without ever noticing Linux plugins being downloaded as described above . 
It appears the BE2/SandWorm gang protected their servers by keeping their non-Windows hacker tools and plugins in separate servers or server folders . 
Finally , each CnC server hosts a different set of plugins , meaning that each server works with different victims and uses plugins based on its current needs . 
Here is the summary list of all known plugins at the moment : We are pretty sure that our list of BE2 tools is not complete . 
For example , we have yet to obtain the router access plugin , but we are confident that it exists . 
Evidence also supports the hypothesis that there is a decryption plugin for victim files ( see below ) . 
Our current collection represents the BE2 attackers ' capabilities quite well . 
Some plugins remain mysterious and their purpose is not yet clear , like 'usb ' and 'bios ' . 
Why would the attackers need information on usb and bios characteristics ? It suggests that based on a specific USB and BIOS devices , the attackers may upload specific plugins to carry out additional actions . 
Perhaps destructive , perhaps to further infect devices . 
We do n't know yet . 
It 's also interesting to point out another plugin â€“ 'grc ' . 
In some of the BE2 configuration files , we can notice an value with a `` gid '' type : This number is an ID for the plus.google.com service and is used by the 'grc ' plugin to parse html . 
It then downloads and decrypts a PNG file . 
The decrypted PNG is supposed to contain a new CNC address , but we never observed one . 
We are aware of two related GooglePlus IDs . 
The first one , plus.google.com/115125387226417117030/ , contains an abnormal number of views . 
At the time of writing , the count is 75 million : The second one - plus.google.com/116769597454024178039/posts - is currently more modest at a little over 5,000 views . 
All of that account 's posts are deleted . 
During observation of the described above `` router-PC '' CnC we tracked the following commands delivered in the config file before the server went offline . 
Our observation of related actions here : The issued commands for the Linux plugins suggest the attackers controlled infected MIPS/ARM devices . 
We want to pay special attention to the DDoS commands meant for these routers . 
188.128.123.52 belongs to the Russian Ministry of Defense and 212.175.109.10 belongs to the Turkish Ministry of Interior 's government site . 
While many researchers suspect a Russian actor is behind BE2 , judging by their tracked activities and the victim profiles , it 's still unclear whose interests they represent . 
While observing some other CnCs and pulling down config files , we stumbled upon some strange mistakes and mis-typing . 
They are highlighted in the image below : First , these mistakes suggest that the BE2 attackers manually edit these config files . 
Secondly , it shows that even skilled hackers make mistakes . 
The contents of the config files themselves are fairly interesting . 
They all contain a callback c2 with a hardcoded ip address , some contain timeouts , and some contain the commands listed above . 
We include a list of observed hardcoded ip C2 addresses here , along with the address owner and geophysical location of the host : It 's interesting that one of these servers is a Tor exit node . 
And , according to the collected config files , the group upgraded their malware communications from plain text http to encrypted https in October 2013 . 
BlackEnergy2 victims are widely distributed geographically . 
We identified BlackEnergy2 targets and victims in the following countries starting in late 2013 . 
There are likely more victims . 
Russia Ukraine Poland Lithuania Belarus Azerbaijan Kyrgyzstan Kazakhstan Iran Israel Turkey Libya Kuwait Taiwan Vietnam India Croatia Germany Belgium Sweden Victim profiles point to an expansive interest in ICS : power generation site owners power facilities construction power generation operators large suppliers and manufacturers of heavy power related materials investors However , we also noticed that the target list includes government , property holding , and technology organizations as well : high level government other ICS construction federal land holding agencies municipal offices federal emergency services space and earth measurement and assessment labs national standards body banks high-tech transportation academic research We gained insight into significant BE2 victim profiles over the summer of 2014 . 
Interesting BE2 incidents are presented here . 
The BE2 attackers successfully spearphished an organization with an exploit for which there is no current CVE , and a metasploit module has been available This email message contained a ZIP archive with EXE file inside that did not appear to be an executable . 
This crafted zip archive exploited a WinRAR flaw that makes files in zip archives appear to have a different name and file extension . 
The attached exe file turned out to be 'BlackEnergy-like ' malware , which researchers already dubbed 'BlackEnergy3 ' - the gang uses it along with BlackEnergy2 . 
Kaspersky Lab detects 'BlackEnergy3 ' malware as Backdoor.Win32.Fonten â€“ naming it after its dropped file `` FONTCACHE.DAT '' When investigating computers in the company 's network , only BE2 associated files were found , suggesting BE3 was used as only a first-stage tool on this network . 
The config files within BE2 contained the settings of the company 's internal web proxy : As the APT-specific BE2 now stores the downloaded plugins in encrypted files on the system ( not seen in older versions â€“ all plugins were only in-memory ) , the administrators were able to collect BE2 files from the infected machines . 
After decrypting these files , we could retrieve plugins launched on infected machines : ps , vsnet , fs , ss , dstr . 
By all appearances , the attackers pushed the 'dstr ' module when they understood that they were revealed , and wanted to hide their presence on the machines . 
Some machines already launched the plugin , lost their data and became unbootable . 
Also , on some machines , documents were encrypted , but no related plugin could be found . 
The second organization was hacked via the first victim 's stolen VPN credentials . 
After the second organization was notified about the infection they started an internal investigation . 
They confirmed that some data was destroyed on their machines , so the BE2 attackers have exhibited some level of destructive activity . 
And , they revealed that their Cisco routers with different IOS versions were hacked . 
They weren't able to connect to the routers any more by telnet and found the following `` farewell '' tcl scripts in the router 's file system : Ciscoapi.tcl â€“ contains various wrappers over cisco EXEC-commands as described in the comments . 
The comment includes a punchy message for `` kasperRsky '' : Killint.tcl â€“ uses Ciscoapi.tcl , implements destroying functions : The script tries to download ciscoapi.tcl from a certain FTP server which served as a storage for BE2 files . 
The organization managed to discover what scripts were hosted on the server before BE/SandWorm gang deleted them , and unfortunately could n't restore them after they were deleted . 
The BE2 actor performs careful , professional activity covering their tracks : ciscoapi.tcl killint.tcl telnetapi2.tcl telnetu.tcl stub.tcl stub1.tcl There is evidence that the logs produced by some scripts were also stored on the FTP server , in particular the information on CDP neighbors which is provided by one of the procedures of ciscoapi.tcl . 
The third organization got compromised by the same type of attack as the first one ( an EXE file spoofing a doc within a Zip archive ) . 
All the plugins discovered in BE2 files were known , and there was no revelation of hacked network devices on their side and no destroyed data . 
The noticeable thing is that many computers contained both BE2 and BE3 files and some config files contained the following URL : hxxps : //46.165.222 ( dot ) 28/upgrade/f3395cd54cf857ddf8f2056768ff49ae/getcfg.php The URL contains the md5 of the string 'router ' . 
One of the discovered config files contained a URL with an as yet unidentified md5 : hxxps : //46.165.222 ( dot ) 28/upgrade/bf0dac805798cc1f633f19ce8ed6382f/upgrade.php A set of victims discovered installed Siemens SCADA software in their ICS environment was responsible for downloading and executing BlackEnergy . 
Starting in March 2014 and ending in July 2014 , Siemens '' ccprojectmgr.exe '' downloaded and executed a handful of different payloads hosted at 94.185.85.122/favicon.ico . 
They are all detected as variants of `` Backdoor.Win32.Blakken '' . 
Each config file within BE2 main.dll has a field called build_id which identifies the malware version for the operators . 
Currently this particular BE/SandWorm gang uses a certain pattern for the build ids containing three hex numbers and three letters , as follows : 0C0703hji The numbers indicate the date of file creation in the format : Year-Month-Day . 
Still , the purpose of the letters is unknown , but most likely it indicates the targets . 
The hex numbers were n't used all the time , sometimes we observed decimal numbers : 100914_mg 100929nrT Most interesting for us was the earliest build id we could find . 
Currently it is `` OB020Ad0V '' , meaning that the BE2/SandWorm APT started operating as early as the beginning of 2010 . 
While BE dropper installs its driver under a randomly picked non-used Windows driver name , like % system32 % \drivers\AliIde.sys . 
The driver is self-signed on 64-bit systems However , new `` APT '' BE2 uses one of the following filenames that are used as an encrypted storage for plugins and the network settings . 
