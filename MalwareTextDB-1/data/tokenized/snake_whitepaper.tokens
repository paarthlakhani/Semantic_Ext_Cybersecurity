One CD O
of IN O
the DT O
questions NNS O
which WDT O
comes VBZ O
up RP O
in IN O
the DT O
months NNS O
after IN O
big JJ O
security NN O
whitepaper NN O
disclosures NNS O
is VBZ O
: : O
where WRB O
are VBP O
they PRP O
now RB O
? . O
In IN O
other JJ O
words NNS O
, , O
what WP O
happened VBD O
to TO O
the DT O
operators NNS O
, , O
tools NNS O
, , O
and CC O
infrastructure NN O
which WDT O
was VBD O
revealed VBN O
in IN O
the DT O
reports NNS O
, , O
blog-posts NNS O
, , O
and CC O
press NN O
interviews NNS O
. . O

Did VBD O
they PRP O
continue VBP O
on IN O
as RB O
before RB O
, , O
did VBD O
they PRP O
re-build VB O
the DT O
disclosed VBN O
infrastructure NN O
and CC O
tools NNS O
, , O
did VBD O
they PRP O
go VB O
away RB O
and CC O
get VB O
jobs NNS O
in IN O
another DT O
line NN O
of IN O
work NN O
? . O
In IN O
some DT O
cases NNS O
, , O
the DT O
disclosure NN O
had VBD O
little JJ O
, , O
if IN O
any DT O
impact NN O
on IN O
the DT O
operation NN O
. . O

For IN O
example NN O
, , O
after IN O
the DT O
McAfee FW O
ShadyRAT FW O
report NN O
in IN O
2011 CD O
, , O
there EX O
was VBD O
absolutely RB O
no DT O
change NN O
in IN O
the DT O
attacks NNS O
from IN O
the DT O
group NN O
behind IN O
this DT O
. . O

However RB O
, , O
when WRB O
Mandiant NNP O
released VBD O
their PRP$ O
APT1 NN O
report NN O
in IN O
2013 CD O
, , O
there EX O
was VBD O
a DT O
noticeable JJ O
reduction NN O
in IN O
activity NN O
from IN O
the DT O
group NN O
– NN O
and CC O
much JJ O
of IN O
the DT O
tools NNS O
and CC O
infrastructure NN O
has VBZ O
not RB O
been VBN O
seen VBN O
since IN O
. . O

In IN O
the DT O
September NNP O
2010 CD O
issue NN O
of IN O
Foreign NNP O
Affairs NNP O
magazine NN O
, , O
former JJ O
US NNP O
Deputy NNP O
Secretary NNP O
of IN O
Defense NNP O
William NNP O
J. NNP O
Lynn NNP O
discussed VBD O
a DT O
cyber-attack NN O
which WDT O
happened VBD O
two CD O
years NNS O
previously RB O
on IN O
the DT O
DoD's NN O
classified JJ O
computer NN O
networks NNS O
. . O

Lynn NNP O
described VBD O
how WRB O
a DT O
foreign JJ O
intelligence NN O
agency NN O
planted VBD O
malicious JJ O
code NN O
on IN O
the DT O
networks NNS O
with IN O
the DT O
aim NN O
of IN O
transferring VBG O
data NNS O
to TO O
servers NNS O
under IN O
their PRP$ O
control NN O
. . O

The DT O
article NN O
included VBD O
the DT O
now RB O
oft-quoted JJ O
phrase NN O
'digital JJ O
beachhead NN O
' '' O
to TO O
describe VB O
what WP O
was VBD O
undoubtedly RB O
a DT O
significant JJ O
compromise NN O
of IN O
US NNP O
military JJ O
systems NNS O
. . O

Further JJ O
reports NNS O
in IN O
the DT O
press NN O
kept VBD O
the DT O
story NN O
alive JJ O
in IN O
2011 CD O
, , O
but CC O
since IN O
then RB O
this DT O
threat NN O
has VBZ O
received VBN O
remarkably RB O
little JJ O
attention NN O
. . O

However RB O
, , O
the DT O
operation NN O
behind IN O
the DT O
attacks NNS O
has VBZ O
continued VBN O
with IN O
little JJ O
modification NN O
to TO O
the DT O
tools NNS O
and CC O
techniques NNS O
, , O
in IN O
spite NN O
of IN O
the DT O
widespread JJ O
attention NN O
a DT O
few JJ O
years NNS O
ago RB O
. . O

They PRP B-Entity
use VBP O
highly RB O
sophisticated JJ O
malware NN O
tools NNS O
to TO O
maintain VB B-Action
persistent JJ B-Entity
access NN I-Entity
to TO I-Entity
their PRP$ I-Entity
targets NNS I-Entity
. . O

These DT B-Entity
tools NNS I-Entity
can MD O
be VB B-Action
used VBN I-Action
for IN B-Modifier
covert JJ B-Entity
communications NNS I-Entity
in IN B-Modifier
a DT B-Entity
number NN I-Entity
of IN I-Entity
different JJ I-Entity
modes NNS I-Entity
, , O
some DT B-Entity
of IN I-Entity
which WDT I-Entity
present JJ B-Action
significant JJ B-Entity
challenges NNS I-Entity
for IN I-Entity
traditional JJ I-Entity
security NN I-Entity
technologies NNS I-Entity
to TO I-Entity
detect VB I-Entity
. . O

There EX O
are VBP O
some DT O
threats NNS O
which WDT O
come VBP O
and CC O
go VBP O
, , O
whilst IN O
there EX O
are VBP O
others NNS O
which WDT O
are VBP O
permanent JJ O
features NNS O
of IN O
the DT O
landscape NN O
. . O

In IN O
this DT O
paper NN O
, , O
we PRP O
describe VBP O
the DT O
tools NNS O
and CC O
techniques NNS O
of IN O
one CD O
of IN O
the DT O
most RBS O
sophisticated JJ O
and CC O
persistent JJ O
threats NNS O
we PRP O
track VBP O
. . O

We PRP O
hope VBP O
this DT O
will MD O
help VB O
victims NNS O
identify VB O
intrusions NNS O
and CC O
understand VB O
their PRP$ O
need NN O
to TO O
improve VB O
defences NNS O
. . O

Cyber NNP O
security NN O
is VBZ O
a DT O
collaborative JJ O
effort NN O
– CD O
the DT O
operation NN O
described VBN O
in IN O
this DT O
paper NN O
again RB O
raises VBZ O
the DT O
bar NN O
for IN O
the DT O
security NN O
community NN O
in IN O
their PRP$ O
efforts NNS O
to TO O
keep VB O
up RP O
with IN O
the DT O
attackers NNS O
in IN O
cyber-space NN O
. . O

When WRB O
antivirus JJ O
back-end JJ O
classification NN O
platforms NNS O
can MD O
not RB O
identify VB O
a DT O
malware NN O
family NN O
for IN O
an DT O
analysed JJ O
malicious JJ O
sample NN O
, , O
they PRP O
assign VBP O
generic JJ O
names NNS O
, , O
such JJ O
as IN O
'' '' O
Trojan NNP O
Horse NNP O
'' '' O
or CC O
'' '' O
Agent NNP O
'' '' O
. . O

The DT O
variant JJ O
letters NNS O
are VBP O
also RB O
assigned VBN O
automatically RB O
, , O
by IN O
using VBG O
hexavigesimal JJ O
( NN O
or CC O
Base26 FW O
) FW O
notation NN O
. . O

That DT O
is VBZ O
, , O
the DT O
variant JJ O
letters NNS O
are VBP O
auto-assigned JJ O
starting VBG O
from IN O
'' '' O
A NNP O
'' '' O
, , O
followed VBD O
with IN O
'' '' O
B NN O
'' '' O
, , O
and CC O
so RB O
on IN O
until IN O
'' '' O
Z NN O
'' '' O
. . O

Next NNP O
comes VBZ O
'' '' O
AA NNP O
'' '' O
, , O
'' '' O
AB NNP O
'' '' O
and CC O
so RB O
on IN O
, , O
until IN O
'' '' O
ZZ NNP O
'' '' O
. . O

After IN O
that DT O
, , O
the DT O
variant JJ O
letters NNS O
start VBP O
from IN O
'' '' O
AAA NNP O
'' '' O
, , O
'' '' O
AAB NNP O
'' '' O
and CC O
so RB O
on IN O
, , O
until IN O
'' '' O
ZZZ NNP O
'' '' O
. . O

Back NNP O
in IN O
2008 CD O
an DT O
unknown JJ O
malicious JJ O
file NN O
was VBD O
discovered VBN O
and CC O
auto-classified JJ O
as IN O
'' '' O
Agent.BTZ NN O
'' '' O
, , O
meaning VBG O
it PRP O
was VBD O
registered VBN O
as IN O
unknown JJ O
malicious JJ O
sample NN O
# # O
1,898 CD O
in IN O
an DT O
anti-virus JJ O
classification NN O
system NN O
. . O

It PRP O
was VBD O
n't RB O
given VBN O
an DT O
actual JJ O
name NN O
, , O
only RB O
a DT O
generic JJ O
one CD O
. . O

Meanwhile RB O
, , O
internally RB O
the DT O
authors NNS O
behind IN O
this DT O
malware NN O
were VBD O
using VBG O
their PRP$ O
own JJ O
naming NN O
systems NNS O
- : O
with IN O
specific JJ O
titles NNS O
for IN O
their PRP$ O
file NN O
components NNS O
and CC O
projects NNS O
such JJ O
as IN O
'' '' O
snake NN O
'' '' O
, , O
'' '' O
uroburos NNS O
'' '' O
, , O
'' '' O
sengoku NN O
'' '' O
, , O
and CC O
'' '' O
snark NN O
'' '' O
used VBN O
to TO O
denote VB O
variants NNS O
of IN O
their PRP$ O
framework NN O
. . O

A DT O
recent JJ O
report NN O
from IN O
German JJ O
security NN O
company NN O
GData NN O
described VBD O
a DT O
sample NN O
from IN O
the DT O
'' '' O
uroburos NN O
'' '' O
variant NN O
of IN O
this DT O
framework NN O
. . O

Their PRP$ O
report NN O
revealed VBD O
the DT O
complex JJ O
nature NN O
of IN O
this DT O
malware NN O
family NN O
, , O
and CC O
showed VBD O
that IN O
the DT O
operation NN O
behind IN O
'' '' O
Agent.BTZ NN O
'' '' O
has VBZ O
continued VBN O
. . O

As IN O
a DT O
result NN O
of IN O
this DT O
disclosure NN O
, , O
we PRP O
are VBP O
also RB O
releasing VBG O
our PRP$ O
own JJ O
technical JJ O
analysis NN O
of IN O
the DT O
threat NN O
, , O
including VBG O
a DT O
timeline NN O
of IN O
known JJ O
samples NNS O
, , O
known VBN O
Command-and-Control NNP O
( NNP O
C NNP O
& CC O
C NNP O
) NNP O
servers NNS O
, , O
and CC O
other JJ O
indicators NNS O
to TO O
aid VB O
investigators NNS O
in IN O
discovering VBG O
attacks NNS O
. . O

Reverse JJ O
engineering NN O
of IN O
recent JJ O
malware NN O
samples NNS O
shows VBZ O
these DT O
to TO O
be VB O
much RB O
more RBR O
advanced JJ O
variants NNS O
of IN O
Agent.BTZ NN O
, , O
though IN O
still RB O
sharing VBG O
many JJ O
similarities NNS O
and CC O
encryption NN O
methods NNS O
with IN O
the DT O
original NN O
. . O

Further JJ O
investigation NN O
allowed VBD O
us PRP O
to TO O
locate VB O
related JJ O
samples NNS O
compiled VBN O
between IN O
2006 CD O
and CC O
2014 CD O
, , O
and CC O
spanning NN O
across IN O
several JJ O
distinctive JJ O
generations NNS O
. . O

The DT O
first JJ O
section NN O
of IN O
this DT O
report NN O
gives VBZ O
an DT O
overview NN O
of IN O
the DT O
samples NNS O
collected VBN O
, , O
where WRB O
they PRP O
were VBD O
reported VBN O
and CC O
the DT O
timelines NNS O
derived VBN O
from IN O
their PRP$ O
analysis NN O
. . O

Snake NNP O
's POS O
architecture NN O
turned VBD O
out RP O
to TO O
be VB O
quite RB O
interesting JJ O
. . O

We PRP O
have VBP O
identified VBN O
two CD B-Entity
distinct JJ I-Entity
variants NNS I-Entity
, , O
both DT O
highly RB O
flexible JJ O
but CC O
with IN O
two CD O
different JJ O
techniques NNS O
for IN O
establishing VBG B-Action
and CC I-Action
maintaining VBG I-Action
a DT B-Entity
presence NN I-Entity
on IN B-Modifier
the DT B-Entity
target NN I-Entity
system NN I-Entity
. . O

In IN O
general JJ O
, , O
its PRP$ O
operation NN O
relies VBZ O
on IN O
kernel NN O
mode NN O
drivers NNS O
, , O
making VBG O
it PRP O
a DT O
rootkit NN O
. . O

It PRP B-Entity
is VBZ O
designed VBN O
to TO O
covertly RB B-Action
install VB I-Action
a DT B-Entity
backdoor NN I-Entity
on IN B-Modifier
a DT B-Entity
compromised VBN I-Entity
system NN I-Entity
, , O
hide VBP B-Action
the DT B-Entity
presence NN I-Entity
of IN I-Entity
its PRP$ I-Entity
components NNS I-Entity
, , O
provide VBP B-Action
a DT B-Entity
communication NN I-Entity
mechanism NN I-Entity
with IN I-Entity
its PRP$ I-Entity
C NN I-Entity
& CC I-Entity
C NN I-Entity
servers NNS I-Entity
, , O
and CC O
enable VB B-Action
an DT B-Entity
effective JJ I-Entity
data NN I-Entity
exfiltration NN I-Entity
mechanism NN I-Entity
. . O

At IN O
the DT O
same JJ O
time NN O
, , O
Snake NNP O
exposed VBD O
a DT O
flexibility NN O
to TO O
conduct VB O
its PRP$ O
operations NNS O
by IN O
engaging VBG O
these DT O
noticeably RB O
different JJ O
architectures NNS O
. . O

In IN O
the DT O
first JJ O
model NN O
, , O
the DT B-Entity
network NN I-Entity
communications NNS I-Entity
are VBP B-Action
carried VBN I-Action
out RP I-Action
from IN B-Modifier
the DT B-Entity
userland NN I-Entity
- : O
i.e NN O
. . O

the DT O
area NN O
of IN O
the DT O
computer NN O
system NN O
where WRB O
application NN O
software NN O
executes VBZ O
. . O

In IN O
another DT O
model NN O
, , O
the DT B-Entity
network NN I-Entity
communications NNS I-Entity
are VBP B-Action
handled VBN I-Action
by IN O
a DT B-Entity
kernel NN I-Entity
mode NN I-Entity
driver NN I-Entity
- : O
i.e NN O
. . O

the DT O
area NN O
where WRB O
lower JJR O
level NN O
system NN O
code NN O
such JJ O
as IN O
device NN O
drivers NNS O
run VBP O
. . O

The DT B-Entity
choice NN I-Entity
of IN I-Entity
what WDT I-Entity
architecture NN I-Entity
should MD I-Entity
be VB I-Entity
used VBN I-Entity
may MD O
depend VB B-Action
on IN I-Action
a DT B-Entity
specific JJ I-Entity
target NN I-Entity
's POS I-Entity
environment NN I-Entity
, , O
allowing VBG O
the DT O
Snake NNP O
operators NNS O
to TO O
choose VB O
the DT O
most RBS O
suitable JJ O
architecture NN O
to TO O
be VB O
deployed VBN O
. . O

In IN O
both DT O
architectures NNS O
there EX O
is VBZ O
a DT B-Entity
kernel NN I-Entity
mode NN I-Entity
driver NN I-Entity
installed VBN B-Action
and CC O
a DT B-Entity
usermode JJ I-Entity
DLL NN I-Entity
injected VBN B-Action
by IN O
the DT B-Entity
driver NN I-Entity
into IN B-Modifier
the DT B-Entity
system NN I-Entity
processes NNS I-Entity
. . O

In IN O
both DT O
architectures NNS O
, , O
there EX O
is VBZ O
both CC O
32-bit JJ O
and CC O
64-bit JJ O
code NN O
involved VBN O
. . O

In IN O
order NN O
to TO O
distinguish VB O
between IN O
these DT O
architectures NNS O
, , O
we PRP O
will MD O
call VB O
them PRP O
the DT O
usermode-centric JJ O
and CC O
the DT O
kernel-centric JJ O
architectures NNS O
respectively RB O
. . O

The DT O
remainder NN O
of IN O
this DT O
report NN O
gives VBZ O
a DT O
detailed JJ O
explanation NN O
of IN O
how WRB O
the DT O
two CD O
Snake NNP O
architectures NNS O
embed VBD O
themselves PRP O
in IN O
the DT O
target NN O
system NN O
and CC O
communicate VBP O
with IN O
the DT O
outside JJ O
world NN O
. . O

We PRP O
have VBP O
also RB O
provided VBN O
a DT O
set NN O
of IN O
technical JJ O
indicators NNS O
in IN O
the DT O
Appendix NN O
to TO O
enable VB O
organisations NNS O
and CC O
the DT O
security NN O
research NN O
community NN O
to TO O
identify VB O
compromises NNS O
. . O

In IN O
total NN O
we PRP O
have VBP O
collected VBN O
over IN O
100 CD O
unique JJ O
files NNS O
related VBN O
to TO O
this DT O
espionage NN O
toolkit NN O
. . O

Many JJ O
of IN O
these DT O
were VBD O
submitted VBN O
to TO O
online JJ O
malware NN O
analysis NN O
websites NNS O
by IN O
victims NNS O
and CC O
investigators NNS O
over IN O
several JJ O
years NNS O
. . O

In IN O
many JJ O
cases NNS O
the DT O
source NN O
country NN O
information NN O
of IN O
the DT O
submission NN O
is VBZ O
available JJ O
. . O

These DT O
allow VBP O
us PRP O
to TO O
visualise VB O
the DT O
distribution NN O
of IN O
countries NNS O
where WRB O
this DT O
malware NN O
has VBZ O
been VBN O
seen VBN O
: : O
Whilst IN O
this DT O
view NN O
is VBZ O
likely JJ O
to TO O
only RB O
be VB O
the DT O
tip NN O
of IN O
the DT O
iceberg NN O
, , O
it PRP O
does VBZ O
give VB O
us PRP O
an DT O
initial JJ O
insight NN O
into IN O
the DT O
profile NN O
of IN O
targets NNS O
for IN O
the DT O
Snake NNP O
operations NNS O
. . O

Other JJ O
useful JJ O
visualisations NNS O
of IN O
the DT O
operations NNS O
come VBP O
from IN O
the DT O
compile VBP O
timestamps NNS O
. . O

Below NNP O
is VBZ O
shown VBN O
a DT O
table NN O
with IN O
a DT O
count NN O
of IN O
the DT O
number NN O
of IN O
files NNS O
in IN O
our PRP$ O
sample NN O
set VBN O
from IN O
recent JJ O
years NNS O
. . O

Two CD O
samples NNS O
compiled VBN O
in IN O
late JJ O
January NNP O
2014 CD O
show VBP O
that IN O
this DT O
activity NN O
is VBZ O
ongoing JJ O
. . O

Plotting VBG O
the DT O
day NN O
of IN O
the DT O
week NN O
in IN O
which WDT O
the DT O
samples NNS O
were VBD O
compiled VBN O
shows VBZ O
a DT O
now RB O
familiar JJ O
pattern NN O
for IN O
analysts NNS O
of IN O
modern JJ O
cyber-attacks NNS O
. . O

The DT O
creators NNS O
of IN O
the DT O
malware NN O
operate VBP O
a DT O
working VBG O
week NN O
, , O
just RB O
like IN O
any DT O
other JJ O
professional NN O
. . O

The DT O
single JJ O
sample NN O
in IN O
our PRP$ O
set NN O
which WDT O
was VBD O
compiled VBN O
on IN O
a DT O
Saturday NNP O
is VBZ O
an DT O
outlier NN O
, , O
but CC O
does VBZ O
n't RB O
alter VB O
the DT O
conclusion NN O
. . O

Similarly RB O
, , O
plotting VBG O
the DT O
hour NN O
of IN O
the DT O
day NN O
in IN O
which WDT O
the DT O
samples NNS O
were VBD O
compiled VBN O
reveals VBZ O
another DT O
human JJ O
pattern NN O
– NN O
the DT O
working VBG O
day NN O
. . O

This DT O
has VBZ O
been VBN O
adjusted VBN O
to TO O
UTC+4 NN O
to TO O
show VB O
a DT O
possible JJ O
fit NN O
to TO O
the DT O
operators NNS O
' POS O
local JJ O
time NN O
. . O

The DT O
usermode-centric JJ O
architecture NN O
of IN O
Snake NNP O
is VBZ O
known VBN O
to TO O
have VB O
been VBN O
used VBN O
from IN O
2011 CD O
till IN O
2014 CD O
, , O
with IN O
the DT O
most RBS O
recent JJ O
sample NN O
compiled VBN O
on IN O
January NNP O
28 CD O
, , O
2014 CD O
. . O

With IN O
this DT O
architecture NN O
, , O
the DT B-Entity
Snake NNP I-Entity
driver NN I-Entity
is VBZ O
mainly RB O
used VBN O
to TO O
load VB B-Action
the DT B-Entity
DLL NNP I-Entity
module NN I-Entity
into IN B-Modifier
the DT B-Entity
usermode NN I-Entity
processes NNS I-Entity
, , O
and CC O
then RB O
use VB B-Action
that DT B-Entity
module NN I-Entity
for IN B-Modifier
the DT B-Entity
communications NNS I-Entity
. . O

One CD O
of IN O
the DT O
analysed VBN O
samples NNS O
exposed VBD O
multiple JJ O
debug NN O
messages NNS O
and CC O
source NN O
control NN O
check-in NN O
logs NNS O
. . O

It PRP O
is VBZ O
not RB O
clear JJ O
why WRB O
those DT O
messages NNS O
were VBD O
allowed VBN O
in IN O
the DT O
deployed VBN O
driver NN O
- : O
possibly RB O
an DT O
operational JJ O
security NN O
lapse NN O
. . O

However RB O
, , O
they PRP O
give VBP O
some DT O
insight NN O
into IN O
the DT O
internal JJ O
structure NN O
of IN O
the DT O
source NN O
code NN O
. . O

For IN O
example NN O
, , O
the DT O
analysed JJ O
driver NN O
gave VBD O
away RB O
the DT O
following VBG O
source NN O
file NN O
names NNS O
: : O
The DT O
source NN O
control NN O
check-in NN O
log NN O
examples NNS O
, , O
showing VBG O
the DT O
names NNS O
of IN O
the DT O
developers NNS O
to TO O
be VB O
'vlad NN O
' '' O
and CC O
'gilg NN O
' '' O
: : O
It PRP O
also RB O
exposed VBD O
the DT O
project NN O
name NN O
of IN O
this DT O
particular JJ O
variant NN O
as IN O
'sengoku NN O
' '' O
: : O
Now RB O
it PRP O
's VBZ O
time NN O
to TO O
execute VB O
the DT O
driver NN O
and CC O
see VB O
what WP O
it PRP O
does VBZ O
. . O

When WRB O
first RB O
executed VBN O
, , O
the DT B-Entity
driver NN I-Entity
creates VBZ B-Action
device NN B-Entity
named VBN I-Entity
\Device\vstor32 NN I-Entity
with IN B-Modifier
a DT B-Entity
symbolic JJ I-Entity
link NN I-Entity
\DosDevices\vstor32 NN I-Entity
. . O

This DT B-Entity
device NN I-Entity
is VBZ B-Action
used VBN I-Action
for IN B-Modifier
userland/kernel NN B-Entity
communications NNS I-Entity
. . O

Next NNP O
, , O
it PRP B-Entity
drops VBZ B-Action
a DT B-Entity
DLL NNP I-Entity
into IN B-Modifier
the DT B-Entity
% NN I-Entity
windows NNS I-Entity
% NN I-Entity
directory NN I-Entity
- : O
the DT O
DLL NNP O
is VBZ O
carried VBN O
in IN O
the DT O
body NN O
of IN O
the DT O
driver NN O
as IN O
a DT O
binary JJ O
chunk NN O
with IN O
XOR NN B-Entity
0xAA NN I-Entity
applied VBD B-Action
on IN B-Modifier
top NN I-Modifier
of IN I-Modifier
it PRP B-Entity
, , O
so IN O
the DT O
driver NN O
decrypts VBZ O
it PRP O
first RB O
. . O

Depending VBG O
on IN O
the DT O
variant NN O
, , O
the DT B-Entity
DLL NNP I-Entity
is VBZ B-Action
dropped VBN I-Action
either CC O
under IN B-Modifier
a DT B-Entity
random JJ I-Entity
name NN I-Entity
or CC I-Entity
a DT I-Entity
hard-coded JJ I-Entity
name NN I-Entity
, , O
such JJ O
as IN O
mscpx32n.dll NN O
. . O

The DT O
purpose NN O
of IN O
this DT B-Entity
DLL NNP I-Entity
is VBZ O
to TO O
be VB B-Action
injected VBN I-Action
into IN B-Modifier
the DT B-Entity
user-mode JJ I-Entity
processes NNS I-Entity
. . O

Some DT O
variants NNS O
of IN O
Snake NNP O
carry VBP O
the DT O
DLL NNP B-Entity
modules NNS I-Entity
that WDT O
can MD O
be VB B-Action
installed VBN I-Action
as IN B-Modifier
a DT B-Entity
service NN I-Entity
, , O
to TO O
be VB B-Action
run VBN I-Action
within IN B-Modifier
taskhost.exe NN B-Entity
or CC I-Entity
services.exe NN I-Entity
processes NNS I-Entity
. . O

Next NNP O
, , O
the DT B-Entity
driver NN I-Entity
sets VBZ B-Action
up RP I-Action
the DT B-Entity
hooks NNS I-Entity
for IN B-Modifier
the DT B-Entity
following JJ I-Entity
kernel-mode JJ I-Entity
APIs NNS I-Entity
: : O
After IN O
that DT O
, , O
it PRP B-Entity
calls VBZ B-Action
PsSetCreateProcessNotifyRoutine FW B-Entity
( FW I-Entity
) NN I-Entity
in IN O
order NN O
to TO O
be VB B-Action
notified VBN I-Action
whenever WRB B-Modifier
a DT B-Entity
new JJ I-Entity
process NN I-Entity
is VBZ I-Entity
started VBN I-Entity
. . O

The DT O
handlers NNS O
of IN O
the DT O
hooks NNS O
above IN O
along IN O
with IN O
the DT O
notification NN O
callback NN O
allow VBP O
Snake NNP B-Entity
to TO O
stay VB B-Action
persistent JJ B-Entity
on IN I-Entity
a DT I-Entity
system NN I-Entity
, , O
being VBG O
able JJ O
to TO O
infect VB B-Action
any DT B-Entity
newly RB I-Entity
created VBN I-Entity
processes NNS I-Entity
, , O
and CC O
restore VB B-Action
its PRP$ B-Entity
driver NN I-Entity
file NN I-Entity
in IN B-Modifier
case NN I-Modifier
it PRP B-Entity
gets VBZ I-Entity
deleted VBN I-Entity
. . O

Another DT B-Entity
set NN I-Entity
of IN I-Entity
hooks NNS I-Entity
it PRP B-Entity
sets VBZ B-Action
is VBZ O
designed VBN O
to TO O
hide VB B-Action
the DT B-Entity
presence NN I-Entity
of IN I-Entity
the DT I-Entity
Snake NNP I-Entity
components NNS I-Entity
on IN I-Entity
the DT I-Entity
system NN I-Entity
: : O
The DT B-Entity
driver NN I-Entity
then RB O
watches VBZ B-Action
for IN B-Modifier
all DT B-Entity
userland JJ I-Entity
processes NNS I-Entity
to TO B-Modifier
see VB B-Entity
if IN I-Entity
they PRP I-Entity
load VBP I-Entity
any DT I-Entity
web NN I-Entity
pages NNS I-Entity
. . O

As RB B-Modifier
long RB I-Modifier
as IN I-Modifier
the DT B-Entity
user NN I-Entity
is VBZ I-Entity
not RB I-Entity
using VBG I-Entity
the DT I-Entity
Internet NNP I-Entity
, , O
Snake NNP B-Entity
stays VBZ B-Action
dormant JJ B-Entity
too RB O
, , O
as IN O
there EX O
is VBZ O
no DT O
process NN O
that WDT O
communicates VBZ O
with IN O
the DT O
web NN O
servers NNS O
. . O

However RB O
, , O
as RB B-Modifier
soon RB I-Modifier
as IN I-Modifier
the DT B-Entity
user NN I-Entity
goes VBZ I-Entity
online NN I-Entity
, , O
the DT B-Entity
driver NN I-Entity
intercepts VBZ B-Action
that IN B-Entity
event NN I-Entity
and CC O
then RB O
immediately RB O
injects VBZ B-Action
the DT B-Entity
malicious JJ I-Entity
DLL NNP I-Entity
module NN I-Entity
into IN B-Modifier
the DT B-Entity
process NN I-Entity
that WDT I-Entity
initiated VBD I-Entity
connection NN I-Entity
( CD O
the DT O
browser NN O
) NN O
. . O

Once RB O
injected VBN O
, , O
the DT B-Entity
module NN I-Entity
initiates VBZ B-Action
polling NN B-Entity
from IN B-Modifier
one CD B-Entity
of IN I-Entity
the DT I-Entity
hard-coded JJ I-Entity
C NN I-Entity
& CC I-Entity
C NN I-Entity
servers NNS I-Entity
. . O

The DT O
purpose NN O
of IN O
this DT B-Entity
behaviour NN I-Entity
is VBZ O
to TO O
blend VB B-Action
Snake NNP B-Entity
's POS I-Entity
traffic NN I-Entity
with IN B-Modifier
the DT B-Entity
browser NN I-Entity
traffic NN I-Entity
, , O
bypassing VBG B-Action
the DT B-Entity
firewalls NNS I-Entity
, , O
and CC O
keeping VBG B-Action
a DT B-Entity
low JJ I-Entity
profile NN I-Entity
at IN O
the DT O
same JJ O
time NN O
. . O

By IN O
communicating VBG O
from IN O
within IN O
a DT O
process NN O
that WDT O
also RB O
communicates VBZ O
, , O
even RB O
a DT O
technically RB O
savvy JJ O
user NN O
will MD O
find VB O
it PRP O
challenging JJ O
to TO O
detect VB O
Snake NNP O
traffic NN O
among IN O
legitimate JJ O
traffic NN O
. . O

The DT O
reason NN O
behind IN O
such JJ O
difficulty NN O
is VBZ O
because IN O
modern JJ O
web NN O
pages NNS O
often RB O
fetch VBP O
pages NNS O
from IN O
the DT O
different JJ O
web NN O
servers NNS O
, , O
including VBG O
such JJ O
data NNS O
as IN O
additional JJ O
scripts NNS O
, , O
CSS NN O
templates NNS O
, , O
advertising NN O
contents NNS O
, , O
analytics NNS O
data NNS O
, , O
blogs NNS O
, , O
social JJ O
networking NN O
data NNS O
, , O
etc FW O
. . O

When WRB O
intercepted VBN O
with IN O
the DT O
purpose NN O
of IN O
analysis NN O
, , O
such JJ O
traffic NN O
may MD O
literally RB O
represent VB O
itself PRP O
hundreds NNS O
of IN O
DNS NNP O
and CC O
HTTP NNP O
requests NNS O
made VBD O
when WRB O
a DT O
popular JJ O
website NN O
, , O
such JJ O
as IN O
a DT O
news NN O
website NN O
is VBZ O
open JJ O
. . O

Hiding VBG B-Action
a DT B-Entity
few JJ I-Entity
DNS/HTTP NN I-Entity
requests NNS I-Entity
among IN B-Modifier
busy JJ B-Entity
network NN I-Entity
traffic NN I-Entity
allows VBZ O
Snake NNP B-Entity
rootkit NN I-Entity
to TO O
stay VB B-Action
unnoticed JJ B-Entity
. . O

In IN O
order NN O
to TO O
test VB O
Snake NNP O
's POS O
communications NNS O
with IN O
the DT O
C NN O
& CC O
C NN O
servers NNS O
, , O
and CC O
still RB O
being VBG O
able JJ O
to TO O
clearly RB O
distinguish VB O
its PRP$ O
traffic NN O
, , O
a DT O
small JJ O
tool NN O
was VBD O
built VBN O
to TO O
generate VB O
GET VB O
request NN O
to TO O
a DT O
web NN O
server NN O
running VBG O
on IN O
the DT O
analysed JJ O
system NN O
. . O

The DT O
tool NN O
was VBD O
named VBN O
as IN O
chrome.exe NN O
in IN O
order NN O
to TO O
trigger VB O
the DT O
malware NN O
communications NNS O
. . O

As RB O
long RB O
as IN O
the DT O
test NN O
tool NN O
named VBN O
chrome.exe NN O
did VBD O
not RB O
make VB O
any DT O
requests NNS O
, , O
its PRP$ O
memory NN O
stayed VBD O
pristine JJ O
. . O

There EX O
were VBD O
no DT O
injections NNS O
made VBN O
by IN O
the DT O
driver NN O
. . O

As RB O
soon RB O
as IN O
the DT O
tool NN O
made VBD O
its PRP$ O
first JJ O
GET VB O
requests NNS O
, , O
the DT B-Entity
driver NN I-Entity
immediately RB O
injected VBD B-Action
a DT B-Entity
malicious JJ I-Entity
DLL NN I-Entity
module NN I-Entity
in IN B-Modifier
it PRP B-Entity
, , O
and CC O
that IN B-Entity
module NN I-Entity
started VBD B-Action
producing VBG B-Entity
the DT I-Entity
following JJ I-Entity
traffic NN I-Entity
: : O
↓ CD O
The DT B-Entity
domain NN I-Entity
names NNS I-Entity
of IN I-Entity
the DT I-Entity
C NN I-Entity
& CC I-Entity
C NN I-Entity
servers NNS I-Entity
it PRP B-Entity
relies VBZ B-Action
on IN I-Action
are VBP O
hard-coded JJ O
in IN O
the DT O
body NN O
of IN O
the DT O
malware NN O
. . O

Some DT O
examples NNS O
are VBP O
given VBN O
below IN O
, , O
and CC O
a DT O
full JJ O
list NN O
of IN O
known JJ O
domains NNS O
is VBZ O
given VBN O
in IN O
the DT O
Appendix NN O
D NN O
: : O
As IN O
seen VBN O
in IN O
the DT O
traffic NN O
dump NN O
above IN O
, , O
the DT B-Entity
malware NN I-Entity
first RB O
resolves VBZ B-Action
the DT B-Entity
domain NN I-Entity
name NN I-Entity
of IN I-Entity
its PRP$ I-Entity
C NNP I-Entity
& CC I-Entity
C NNP I-Entity
. . O

Next NNP O
, , O
it PRP B-Entity
fetches VBZ B-Action
a DT B-Entity
file NN I-Entity
/D/pub.txt NN I-Entity
, , O
and CC O
expects VBZ B-Action
the DT B-Entity
server NN I-Entity
to TO I-Entity
respond VB I-Entity
with IN I-Entity
a DT I-Entity
string NN I-Entity
'' '' I-Entity
1 CD I-Entity
'' '' I-Entity
, , I-Entity
acknowledging VBG I-Entity
it PRP I-Entity
's VBZ I-Entity
active JJ I-Entity
: : O
Once RB O
acknowledged VBD O
, , O
it PRP B-Entity
asks VBZ B-Action
the DT B-Entity
server NN I-Entity
for IN B-Modifier
a DT B-Entity
command NN I-Entity
, , O
and CC O
the DT B-Entity
server NN I-Entity
returns VBZ B-Action
a DT B-Entity
new JJ I-Entity
command NN I-Entity
to TO I-Entity
execute VB I-Entity
: : O
The DT B-Entity
command NN I-Entity
it PRP B-Entity
receives VBZ B-Action
from IN B-Modifier
C NNP B-Entity
& CC I-Entity
C NNP I-Entity
above IN O
( NNP O
swim.onlinewebshop.net NNP O
) NNP O
is VBZ B-Action
encrypted VBN I-Action
. . O

In IN O
order NN O
to TO O
decrypt VB B-Action
it PRP B-Entity
, , O
the DT B-Entity
malware NN I-Entity
first RB O
applies VBZ B-Action
the DT B-Entity
XOR NN I-Entity
mask NN I-Entity
to TO B-Modifier
the DT B-Entity
bytes NNS I-Entity
that WDT I-Entity
start VBP I-Entity
from IN I-Entity
offset VBN I-Entity
0x40 NN I-Entity
: : O
An DT O
identical JJ O
XOR NN O
mask NN O
was VBD O
also RB O
used VBN O
by IN O
Agent.BTZ NNP O
. . O

Next NNP O
, , O
it PRP B-Entity
calculates VBZ B-Action
and CC I-Action
confirms VBZ I-Action
a DT B-Entity
CRC32 NN I-Entity
checksum NN I-Entity
within IN B-Modifier
the DT B-Entity
command NN I-Entity
, , O
further RB O
decrypts VBZ B-Action
the DT B-Entity
data NNS I-Entity
by IN B-Modifier
using VBG B-Entity
the DT I-Entity
Number NNP I-Entity
Theory NNP I-Entity
Library NNP I-Entity
( NNP I-Entity
NTL NNP I-Entity
) NNP I-Entity
, , O
and CC O
makes VBZ B-Action
sure JJ I-Action
the DT B-Entity
command NN I-Entity
is VBZ I-Entity
destined VBN I-Entity
to TO I-Entity
the DT I-Entity
current JJ I-Entity
host NN I-Entity
by IN B-Modifier
matching VBG B-Entity
the DT I-Entity
ID NNP I-Entity
field NN I-Entity
in IN I-Entity
it PRP I-Entity
. . O

Once RB O
decrypted VBN O
, , O
the DT B-Entity
malware NN I-Entity
interprets VBZ B-Action
the DT B-Entity
received JJ I-Entity
command NN I-Entity
, , O
as IN O
reflected VBN O
in IN O
the DT O
malware NN O
log NN O
below IN O
( NN O
the DT O
new JJ O
C NN O
& CC O
C NN O
server NN O
address NN O
is VBZ O
highlighted VBN O
in IN O
it PRP O
) CD O
: : O
After IN O
that DT O
, , O
the DT B-Entity
malware NN I-Entity
connects VBZ B-Action
to TO B-Modifier
the DT B-Entity
new JJ I-Entity
C NNP I-Entity
& CC I-Entity
C NNP I-Entity
, , O
asking VBG B-Action
it PRP B-Entity
for IN B-Modifier
another DT B-Entity
command NN I-Entity
: : O
The DT B-Entity
command NN I-Entity
it PRP B-Entity
receives VBZ B-Action
is VBZ O
called VBN O
UpLoad NNP O
, , O
so IN O
it PRP B-Entity
uploads VBZ B-Action
all PDT B-Entity
the DT I-Entity
collected VBN I-Entity
logs NNS I-Entity
to TO B-Modifier
the DT B-Entity
server NN I-Entity
, , O
and CC O
then RB O
cleans VBZ B-Action
out RP I-Action
those DT B-Entity
logs NNS I-Entity
: : O
The DT B-Entity
files NNS I-Entity
it PRP B-Entity
uploads VBZ B-Action
are VBP O
stored VBN O
inside IN O
its PRP$ O
home NN O
directory NN O
% NN O
windows NNS O
% NN O
\ CD O
$ $ O
NtUninstallQ FW O
[ FW O
random JJ O
] NN O
$ $ O
, , O
where WRB O
[ JJ O
random JJ O
] NN O
is VBZ O
a DT O
random JJ O
number NN O
. . O

For IN O
example NN O
, , O
Snake NNP O
's POS O
home NN O
directory NN O
could MD O
be VB O
C NN O
: : O
\WINDOWS\ NN O
$ $ O
NtUninstallQ812589 JJ O
$ $ O
. . O

The DT B-Entity
files NNS I-Entity
within IN I-Entity
that DT I-Entity
directory NN I-Entity
are VBP B-Action
used VBN I-Action
by IN O
the DT O
rootkit NN B-Entity
to TO O
store NN B-Action
configuration NN B-Entity
and CC I-Entity
log NN I-Entity
data NNS I-Entity
. . O

When WRB O
decrypted VBN O
with IN O
the DT O
same JJ O
XOR NN O
key NN O
that WDT O
was VBD O
used VBN O
by IN O
Agent.BTZ NN O
, , O
these DT O
files NNS O
expose VBP O
the DT O
following JJ O
contents NNS O
: : O
Analysis NN O
of IN O
the DT O
sample NN O
reveals VBZ O
that IN O
it PRP B-Entity
supports VBZ B-Action
3 CD B-Entity
modes NNS I-Entity
of IN I-Entity
fetching VBG I-Entity
C NN I-Entity
& CC I-Entity
C NN I-Entity
commands NNS I-Entity
. . O

• NN O
In IN O
the DT O
first JJ O
mode NN O
, , O
it PRP B-Entity
relies VBZ B-Action
on IN I-Action
Windows NNP B-Entity
Internet NNP I-Entity
( FW I-Entity
WinINet FW I-Entity
) FW I-Entity
APIs NNS I-Entity
, , I-Entity
such JJ I-Entity
as IN I-Entity
HttpOpenRequest NNP I-Entity
( NNP I-Entity
) NNP I-Entity
, , I-Entity
HttpSendRequest NNP I-Entity
( NNP I-Entity
) NNP I-Entity
, , I-Entity
InternetReadFile NNP I-Entity
( NNP I-Entity
) NNP I-Entity
, , I-Entity
etc FW I-Entity
. . O

• NN O
In IN O
the DT O
second JJ O
mode NN O
, , O
it PRP B-Entity
uses VBZ B-Action
Windows NNP B-Entity
Sockets NNP I-Entity
2 CD I-Entity
( FW I-Entity
Winsock FW I-Entity
) FW I-Entity
APIs NNS I-Entity
, , I-Entity
such JJ I-Entity
as IN I-Entity
WSAStartup NNP I-Entity
( NNP I-Entity
) NNP I-Entity
, , I-Entity
socket NN I-Entity
( FW I-Entity
) FW I-Entity
, , I-Entity
connect VB I-Entity
( FW I-Entity
) FW I-Entity
, , I-Entity
send VB I-Entity
( FW I-Entity
) FW I-Entity
, , I-Entity
etc FW I-Entity
. . O

• NN O
In IN O
the DT O
third JJ O
mode NN O
, , O
it PRP B-Entity
works VBZ B-Action
in IN B-Modifier
the DT B-Entity
'pipe NN I-Entity
server NN I-Entity
' '' I-Entity
mode NN I-Entity
, , O
when WRB O
it PRP B-Entity
passes VBZ B-Action
the DT B-Entity
web NN I-Entity
requests NNS I-Entity
it PRP I-Entity
is VBZ I-Entity
interested JJ I-Entity
in FW I-Entity
( FW I-Entity
as IN I-Entity
a DT I-Entity
client NN I-Entity
) NN I-Entity
to TO B-Modifier
the DT B-Entity
pipe NN I-Entity
server NN I-Entity
that WDT I-Entity
runs VBZ I-Entity
within IN I-Entity
Windows NNP I-Entity
Explorer NNP I-Entity
( NNP I-Entity
explorer.exe NNP I-Entity
) NNP I-Entity
and/or CC I-Entity
Internet NNP I-Entity
Explorer NNP I-Entity
( FW I-Entity
iexplore.exe FW I-Entity
) FW I-Entity
processes NNS I-Entity
. . O

Memory NN O
pipes NNS O
is VBZ O
a DT O
common JJ O
mechanism NN O
for IN O
Inter-Process NNP O
Communications NNPS O
( FW O
IPC FW O
) FW O
. . O

When WRB O
the DT O
pipe NN O
server NN O
reads VBZ O
such JJ O
requests NNS O
from IN O
the DT O
pipes NNS O
, , O
it PRP O
performs VBZ O
the DT O
web NN O
request NN O
on IN O
behalf NN O
of IN O
a DT O
client NN O
by IN O
using VBG O
WinINet NNP O
APIs NNS O
, , O
so IN O
it PRP O
effectively RB O
serves VBZ O
as IN O
a DT O
proxy NN O
. . O

The DT O
diagram NN O
below IN O
demonstrates VBZ O
the DT O
last JJ O
, , O
'pipe JJ O
server NN O
' '' O
mode NN O
of IN O
Snake NNP O
operation NN O
: : O
The DT O
diagram NN O
illustrates VBZ O
the DT O
operation NN O
steps NNS O
1-4 CD O
: : O
1 CD O
First NNP O
, , O
the DT B-Entity
malicious JJ I-Entity
driver NN I-Entity
with IN I-Entity
the DT I-Entity
embedded JJ I-Entity
DLL NNP I-Entity
module NN I-Entity
injects VBZ B-Action
that IN B-Entity
DLL NNP I-Entity
into IN B-Modifier
a DT B-Entity
system NN I-Entity
process NN I-Entity
, , I-Entity
such JJ I-Entity
as IN I-Entity
services.exe NN I-Entity
; : O
once RB O
loaded VBN O
, , O
the DT B-Entity
DLL NNP I-Entity
will MD O
function VB B-Action
in IN B-Modifier
the DT B-Entity
'pipe NN I-Entity
server NN I-Entity
' '' I-Entity
mode NN I-Entity
. . O

2 CD O
As RB O
soon RB O
as IN O
the DT B-Entity
driver NN I-Entity
detects VBZ B-Action
a DT B-Entity
usermode NN I-Entity
process NN I-Entity
that WDT I-Entity
goes VBZ I-Entity
online JJ I-Entity
( FW I-Entity
e.g FW I-Entity
. . I-Entity
a DT I-Entity
browser NN I-Entity
) NN I-Entity
, , O
it PRP B-Entity
will MD O
inject VB B-Action
malicious JJ B-Entity
DLL NNP I-Entity
module NN I-Entity
into IN B-Modifier
it PRP B-Entity
; : O
depending VBG O
on IN O
the DT O
operational JJ O
mode NN O
, , O
the DT B-Entity
DLL NNP I-Entity
may MD O
start VB B-Action
communicating VBG B-Entity
with IN I-Entity
C NN I-Entity
& CC I-Entity
C NN I-Entity
directly RB I-Entity
. . O

3 CD O
In IN O
the DT O
'pipe NN O
mode NN O
' '' O
of IN O
operation NN O
, , O
the DT B-Entity
injected VBN I-Entity
DLL NNP I-Entity
will MD O
start VB B-Action
communicating VBG B-Entity
with IN I-Entity
the DT I-Entity
pipe NN I-Entity
server NN I-Entity
by IN O
sending VBG B-Action
messages NNS B-Entity
into IN B-Modifier
the DT B-Entity
established JJ I-Entity
inter-process JJ I-Entity
communication NN I-Entity
pipes NNS I-Entity
. . O

4 CD O
Once RB O
the DT B-Entity
task NN I-Entity
of IN I-Entity
communication NN I-Entity
with IN I-Entity
C NNP I-Entity
& CC I-Entity
C NNP I-Entity
is VBZ B-Action
delegated VBN I-Action
to TO B-Modifier
the DT B-Entity
pipe NN I-Entity
server NN I-Entity
, , O
it PRP B-Entity
will MD O
start VB B-Action
communicating VBG B-Entity
with IN I-Entity
the DT I-Entity
C NN I-Entity
& CC I-Entity
C NN I-Entity
, , O
bypassing VBG B-Action
the DT B-Entity
host-based JJ I-Entity
firewalls NNS I-Entity
that WDT I-Entity
keep VBP I-Entity
an DT I-Entity
infected JJ I-Entity
system NN I-Entity
process NN I-Entity
in IN I-Entity
a DT I-Entity
white-list NN I-Entity
. . O

The DT O
reason NN O
behind IN O
the DT B-Entity
pipes NNS I-Entity
usage NN I-Entity
is VBZ O
to TO O
'legitimise VB B-Action
' '' I-Action
the DT B-Entity
outbound JJ I-Entity
web NN I-Entity
requests NNS I-Entity
, , O
forcing VBG O
them PRP O
to TO O
originate VB O
from IN O
the DT O
host NN O
firewall- JJ O
friendly JJ O
system NN O
services NNS O
. . O

Pipe NNP O
server NN O
is VBZ O
a DT O
special JJ O
mode NN O
of IN O
the DT O
injected VBN O
DLL NNP O
. . O

In IN O
order NN O
to TO O
switch VB O
into IN O
that DT O
mode NN O
, , O
a DT B-Entity
dedicated JJ I-Entity
thread NN I-Entity
is VBZ B-Action
spawned VBN I-Action
to TO O
listen VB B-Action
for IN B-Modifier
IPC NNP B-Entity
messages NNS I-Entity
received VBD I-Entity
through IN I-Entity
the DT I-Entity
pipes NNS I-Entity
. . O

The DT O
memory NN O
pipes NNS O
used VBN O
by IN O
Snake NNP O
are VBP O
named VBN O
as IN O
: : O
Apart RB O
from IN O
GET VB B-Entity
/ / O
POST VB B-Entity
requests NNS I-Entity
, , O
the DT B-Entity
pipe NN I-Entity
clients NNS I-Entity
( VBP I-Entity
infected JJ I-Entity
usermode NN I-Entity
processes NNS I-Entity
) NN I-Entity
may MD O
also RB O
ask VB B-Action
the DT B-Entity
pipe NN I-Entity
server NN I-Entity
to TO O
perform VB B-Action
other JJ O
operations NNS O
on IN O
their PRP$ O
behalf NN O
, , O
such JJ O
as IN O
saving VBG B-Action
data NNS B-Entity
into IN B-Modifier
a DT B-Entity
temporary JJ I-Entity
file NN I-Entity
, , O
copy VB B-Action
/ / O
delete VB B-Action
files NNS B-Entity
, , O
save VB B-Action
configuration NN B-Entity
data NNS I-Entity
into IN B-Modifier
the DT B-Entity
registry NN I-Entity
under IN B-Modifier
the DT B-Entity
aforementioned JJ I-Entity
ShellCore NN I-Entity
value NN I-Entity
. . O

This DT B-Entity
delegation NN I-Entity
of IN I-Entity
tasks NNS I-Entity
is VBZ O
designed VBN O
to TO O
keep VB B-Action
infected JJ B-Entity
processes NNS I-Entity
under IN B-Modifier
the DT B-Entity
radar NN I-Entity
of IN I-Entity
the DT I-Entity
behavioural JJ I-Entity
analysis NN I-Entity
tools NNS I-Entity
for IN B-Modifier
as RB B-Entity
long JJ I-Entity
as IN I-Entity
possible JJ I-Entity
. . O

Another DT O
reason NN O
is VBZ O
to TO O
overcome VB B-Action
account NN B-Entity
restrictions NNS I-Entity
imposed VBN I-Entity
on IN I-Entity
a DT I-Entity
browser NN I-Entity
process NN I-Entity
in IN O
order NN O
to TO O
be VB O
able JJ O
to TO O
write VB B-Action
into IN B-Modifier
files NNS B-Entity
/ / O
registry NN B-Entity
. . O

To TO O
delegate VB O
different JJ O
types NNS O
of IN O
tasks NNS O
, , O
the DT B-Entity
clients NNS I-Entity
send VBP B-Action
messages NNS B-Entity
to TO B-Modifier
the DT B-Entity
pipe NN I-Entity
server NN I-Entity
using VBG B-Modifier
the DT B-Entity
following VBG I-Entity
task NN I-Entity
identification NN I-Entity
headers NNS I-Entity
: : O
The DT B-Entity
usermode JJ I-Entity
component NN I-Entity
of IN I-Entity
Snake NNP I-Entity
communicates VBZ B-Action
with IN B-Modifier
its PRP$ B-Entity
kernel-mode JJ I-Entity
driver NN I-Entity
via IN B-Modifier
a DT B-Entity
device NN I-Entity
called VBN I-Entity
\\.\vstor32 FW I-Entity
( FW I-Entity
created VBN I-Entity
under IN I-Entity
kernel NN I-Entity
as IN I-Entity
\Device\vstor32 FW I-Entity
) FW I-Entity
. . O

In IN O
its PRP$ O
communication NN O
protocol NN O
with IN O
the DT O
driver NN O
it PRP O
uses VBZ O
the DT O
IOCTL NNP O
code NN O
of IN O
0x222038 NN O
. . O

To TO O
write VB B-Action
data NNS B-Entity
, , O
it PRP B-Entity
opens VBZ B-Action
the DT B-Entity
device NN I-Entity
with IN B-Modifier
CreateFile FW B-Entity
( FW I-Entity
'' '' I-Entity
\\.\vstor32 NN I-Entity
'' '' I-Entity
) NN I-Entity
, , O
then RB O
calls VBZ B-Action
DeviceIoControl NNP B-Entity
( NNP I-Entity
) NNP I-Entity
API NNP I-Entity
on IN B-Modifier
its PRP$ B-Entity
handle VB I-Entity
with IN B-Modifier
IOCTL NN B-Entity
code NN I-Entity
of IN I-Entity
0x222038 NN I-Entity
. . O

Configuration NN O
parameters NNS O
along IN O
with IN O
the DT B-Entity
initial JJ I-Entity
set NN I-Entity
of IN I-Entity
domain NN I-Entity
names NNS I-Entity
are VBP B-Action
hard-coded JJ I-Action
within IN B-Modifier
the DT B-Entity
body NN I-Entity
of IN I-Entity
the DT I-Entity
DLL NNP I-Entity
. . O

However RB O
, , O
the DT O
data NN O
appears VBZ O
to TO O
be VB O
defined VBN O
in IN O
the DT O
structures NNS O
, , O
so IN O
it PRP O
is VBZ O
very RB O
likely JJ O
the DT O
DLL NNP O
could MD O
be VB O
generated VBN O
by IN O
a DT O
stand-alone JJ O
builder NN O
that WDT O
'patches VBZ O
' '' O
the DT O
DLL NNP O
with IN O
the DT O
new/updated JJ O
list NN O
of IN O
C NNP O
& CC O
C NNP O
. . O

Analysis NNP O
of IN O
the DT B-Entity
commands NNS I-Entity
performed VBN B-Action
by IN O
the DT B-Entity
malware NN I-Entity
suggests VBZ O
the DT O
following JJ O
capabilities NNS O
: : O
Together RB O
, , O
these DT B-Entity
commands NNS I-Entity
provide VBP B-Action
complete JJ B-Entity
backdoor JJ I-Entity
functionality NN I-Entity
, , O
allowing VBG B-Action
remote JJ B-Entity
attacker NN I-Entity
full JJ B-Entity
control NN I-Entity
over IN I-Entity
the DT I-Entity
compromised VBN I-Entity
system NN I-Entity
. . O

The DT O
ability NN O
to TO O
update VB B-Action
the DT B-Entity
driver NN I-Entity
and CC O
then RB O
rely VB B-Action
on IN I-Action
its PRP$ B-Entity
communication NN I-Entity
capabilities NNS I-Entity
means VBZ O
that IN O
the DT O
components NNS O
of IN O
Snake NNP O
are VBP O
flexible JJ O
, , O
making VBG O
possible JJ O
the DT O
existence NN O
of IN O
the DT O
hybrid NN O
( NN O
kernel-centric JJ O
and CC O
usermode-centric JJ O
) NN O
architectures NNS O
. . O

For IN O
example NN O
, , O
the DT O
virtual JJ O
partitions NNS O
are VBP O
used VBN O
by IN O
kernel-centric JJ O
Snake NNP O
variants NNS O
, , O
where WRB O
the DT B-Entity
kernel-mode JJ I-Entity
driver NN I-Entity
is VBZ B-Action
responsible JJ B-Entity
for IN I-Entity
the DT I-Entity
communications NNS I-Entity
. . O

If IN O
such PDT B-Entity
a DT I-Entity
driver NN I-Entity
is VBZ B-Action
installed VBN I-Action
via IN B-Modifier
an DT B-Entity
update VBP I-Entity
, , O
the DT B-Entity
usermode NN I-Entity
component NN I-Entity
can MD O
be VB B-Action
instructed VBN I-Action
to TO O
delegate VB O
the DT O
file NN O
upload NN O
task NN O
to TO O
the DT O
driver NN O
by IN O
copying VBG B-Action
all PDT B-Entity
the DT I-Entity
necessary JJ I-Entity
logs NNS I-Entity
into IN B-Modifier
the DT B-Entity
shared JJ I-Entity
virtual JJ I-Entity
partition NN I-Entity
, , O
physically RB O
located JJ O
on IN O
the DT O
compromised VBN O
host NN O
and CC O
thus RB O
, , O
accessible JJ O
from IN O
kernel NN O
. . O

This DT O
particular JJ O
architecture NN O
relies VBZ O
on IN O
a DT B-Entity
kernel-mode JJ I-Entity
driver NN I-Entity
to TO O
carry VB B-Action
out RP I-Action
the DT B-Entity
network NN I-Entity
communications NNS I-Entity
. . O

The DT B-Entity
usermode JJ I-Entity
DLLs NNS I-Entity
are VBP B-Action
still RB I-Action
injected VBN I-Action
into IN B-Modifier
the DT B-Entity
system NN I-Entity
processes VBZ I-Entity
to TO B-Modifier
perform VB B-Entity
high-level JJ I-Entity
tasks NNS I-Entity
. . O

The DT O
delivery NN O
mechanism NN O
is VBZ O
not RB O
known VBN O
: : O
it PRP B-Entity
may MD O
be VB B-Action
distributed VBN I-Action
via IN B-Modifier
a DT O
thumb-drive JJ O
, , O
a DT B-Entity
phishing NN I-Entity
email NN I-Entity
attachment NN I-Entity
, , O
or CC O
be VB B-Action
delivered VBN I-Action
via IN B-Modifier
an DT B-Entity
exploit VB I-Entity
across IN I-Entity
the DT I-Entity
network NN I-Entity
( FW O
e.g FW O
. . O

by IN O
using VBG O
the DT O
reconnaissance NN O
tool NN O
that WDT O
is VBZ O
explained VBN O
later JJ O
) NN O
. . O

Infection NN B-Entity
starts VBZ B-Action
from IN B-Modifier
a DT B-Entity
dropper NN I-Entity
penetrating VBG I-Entity
into IN I-Entity
the DT I-Entity
compromised VBN I-Entity
system NN I-Entity
where WRB I-Entity
it PRP I-Entity
is VBZ I-Entity
allowed VBN I-Entity
to TO I-Entity
run VB I-Entity
. . O

Once RB O
executed VBN B-Action
, , O
the DT B-Entity
dropper NN I-Entity
installs VBZ B-Action
the DT B-Entity
kernel NN I-Entity
mode NN I-Entity
driver NN I-Entity
in IN B-Modifier
a DT B-Entity
pre-defined JJ I-Entity
location NN I-Entity
. . O

The DT O
dropper NN O
itself PRP O
is VBZ O
32-bit JJ O
, , O
so IN O
it PRP O
will MD O
run VB O
both DT O
on IN O
32-bit JJ O
and CC O
64-bit JJ O
Windows NNP O
OS NNP O
( NNP O
in IN O
WoW64 NN O
mode NN O
) NN O
. . O

On IN B-Modifier
a DT B-Entity
32-bit JJ I-Entity
OS NN I-Entity
, , O
it PRP B-Entity
will MD O
install VB B-Action
a DT B-Entity
32-bit JJ I-Entity
driver NN I-Entity
. . O

On IN B-Modifier
a DT B-Entity
64-bit JJ I-Entity
OS NN I-Entity
, , O
it PRP B-Entity
will MD O
install VB B-Action
a DT B-Entity
64-bit JJ I-Entity
driver NN I-Entity
. . O

The DT B-Entity
analysed VBN I-Entity
32-bit JJ I-Entity
dropper NN I-Entity
creates VBZ B-Action
a DT B-Entity
driver NN I-Entity
in IN B-Modifier
the DT B-Entity
following JJ I-Entity
location NN I-Entity
: : O
However RB O
, , O
different JJ O
samples NNS O
may MD O
use VB O
a DT O
different JJ O
path NN O
and CC O
driver NN O
file NN O
name NN O
. . O

For IN O
example NN O
, , O
some DT O
samples NNS O
exposed VBD O
these DT O
filenames NNS O
: : O
fdisk32.sys NNS O
, , O
A0009547.sys NNS O
, , O
or CC O
Ultra3.sys NNS O
. . O

The DT O
filename NN O
of IN O
the DT O
dropper NN O
could MD O
be VB O
rknginst.exe NN O
or CC O
fdiskmon.exe NN O
. . O

Once RB O
executed VBN O
, , O
the DT O
driver NN O
first RB O
makes VBZ O
sure JJ O
it PRP O
is VBZ O
registered VBN O
under IN O
a DT O
pre-defined JJ O
name NN O
, , O
such JJ O
as IN O
Ultra3 NN O
. . O

Other JJ O
samples NNS O
may MD O
have VB O
a DT O
different JJ O
registration NN O
name NN O
, , O
such JJ O
as IN O
~ROOT NN O
. . O

The DT B-Entity
registration NN I-Entity
is VBZ B-Action
ensured VBN I-Action
with IN B-Modifier
creation NN B-Entity
of IN I-Entity
the DT I-Entity
following VBG I-Entity
registry NN I-Entity
entries NNS I-Entity
: : O
The DT B-Entity
driver NN I-Entity
then RB O
flags NNS B-Action
the DT B-Entity
following JJ I-Entity
events NNS I-Entity
with IN B-Modifier
the DT B-Entity
notification NN I-Entity
purposes NNS I-Entity
: : O
The DT B-Entity
rootkit NN I-Entity
then RB O
places VBZ B-Action
a DT B-Entity
number NN I-Entity
of IN I-Entity
the DT I-Entity
hooks NNS I-Entity
. . O

The DT O
first JJ O
API NN O
it PRP B-Entity
hooks VBZ B-Action
is VBZ O
IoCreateDevice NNP B-Entity
( NNP I-Entity
) NNP I-Entity
. . O

The DT B-Entity
installed JJ I-Entity
hook NN I-Entity
handler NN I-Entity
calls VBZ B-Action
the DT B-Entity
original JJ I-Entity
API NN I-Entity
and CC O
then RB O
checks NNS B-Action
if IN B-Entity
the DT I-Entity
name NN I-Entity
of IN I-Entity
the DT I-Entity
device NN I-Entity
is VBZ I-Entity
netbt NN I-Entity
or CC I-Entity
afd NN I-Entity
. . O

If IN O
so RB O
, , O
it PRP B-Entity
will MD O
install VB B-Action
a DT B-Entity
TDI NNP I-Entity
filter NN I-Entity
driver NN I-Entity
. . O

If IN O
the DT O
device NN O
name NN O
is VBZ O
Null NNP O
, , O
Beep NNP O
, , O
tcpip NN O
or CC O
Nsiproxy NNP O
, , O
it PRP O
will MD O
activate VB O
itself PRP O
by IN O
enabling VBG O
its PRP$ B-Entity
hooks NNS I-Entity
designed VBN O
to TO O
hide VB B-Action
the DT B-Entity
presence NN I-Entity
of IN I-Entity
Snake NNP I-Entity
on IN I-Entity
a DT I-Entity
system NN I-Entity
, , O
set VBN O
up RP O
its PRP$ O
access NN O
control NN O
lists NNS O
and CC O
the DT O
messaging NN O
system NN O
. . O

In IN O
order NN O
to TO O
hide VB B-Action
its PRP$ B-Entity
components NNS I-Entity
, , O
the DT B-Entity
driver NN I-Entity
hooks VBZ B-Action
the DT B-Entity
following JJ I-Entity
APIs NNS I-Entity
: : O
For IN O
example NN O
, , O
the DT B-Entity
hook NN I-Entity
handlers NNS I-Entity
of IN I-Entity
the DT I-Entity
registry-related JJ I-Entity
APIs NNS I-Entity
will MD O
block VB B-Action
access NN B-Entity
to TO I-Entity
the DT I-Entity
registry NN I-Entity
entries NNS I-Entity
that WDT I-Entity
contain VBP I-Entity
the DT I-Entity
name NN I-Entity
of IN I-Entity
the DT I-Entity
driver NN I-Entity
. . O

In IN O
one CD O
example NN O
, , O
the DT B-Entity
rootkit NN I-Entity
blocks VBZ B-Action
access NN B-Entity
to TO I-Entity
registry NN I-Entity
entries NNS I-Entity
that WDT I-Entity
contain VBP I-Entity
the DT I-Entity
strings NNS I-Entity
'' '' I-Entity
Ultra3 NN I-Entity
'' '' I-Entity
and CC I-Entity
'' '' I-Entity
~ROOT NNP I-Entity
'' '' I-Entity
. . O

The DT B-Entity
ZwReadFile NNP I-Entity
( NNP I-Entity
) NNP I-Entity
hook NN I-Entity
handler NN I-Entity
will MD O
block VB B-Action
access NN B-Entity
to TO I-Entity
the DT I-Entity
home NN I-Entity
directory NN I-Entity
where WRB I-Entity
the DT I-Entity
rootkit NN I-Entity
keeps VBZ I-Entity
its PRP$ I-Entity
file NN I-Entity
. . O

In IN O
one CD O
of IN O
the DT O
analysed VBN O
kernel-centric JJ O
Snake NNP O
samples NNS O
the DT O
home NN O
directory NN O
was VBD O
hard-coded JJ O
as IN O
% JJ O
windows NNS O
% NN O
\ CD O
$ $ O
NtUninstallQ817473 JJ O
$ $ O
, , O
so IN O
it PRP B-Entity
blocked VBD B-Action
file NN B-Entity
read NN I-Entity
access NN I-Entity
from IN I-Entity
that DT I-Entity
directory NN I-Entity
. . O

The DT B-Entity
ZwClose FW I-Entity
( FW I-Entity
) FW I-Entity
hook NN I-Entity
handler NN I-Entity
is VBZ O
used VBN O
to TO O
inject VB B-Action
the DT B-Entity
DLL NNP I-Entity
module NN I-Entity
into IN B-Modifier
the DT B-Entity
userland NN I-Entity
processes NNS I-Entity
. . O

The DT B-Entity
hook NN I-Entity
handler NN I-Entity
for IN I-Entity
ZwTerminateProcess NNP I-Entity
( NNP I-Entity
) NNP I-Entity
checks NNS B-Action
if IN B-Entity
the DT I-Entity
process NN I-Entity
being VBG I-Entity
shut VBN I-Entity
down RP I-Entity
is VBZ I-Entity
svchost.exe NNP I-Entity
. . O

If IN O
so RB O
, , O
it PRP O
considers VBZ O
it PRP O
to TO O
be VB O
a DT O
system NN O
shutdown NN O
, , O
so IN O
it PRP B-Entity
unloads VBZ B-Action
its PRP$ B-Entity
usermode NN I-Entity
DLL NN I-Entity
and CC O
deactivates VBZ B-Action
its PRP$ B-Entity
own JJ I-Entity
network NN I-Entity
drivers NNS I-Entity
, , O
just RB O
like IN O
it PRP O
does VBZ O
when WRB O
its PRP$ O
ZwShutdownSystem NNP O
( FW O
) FW O
hook NN O
handler NN O
gets VBZ O
invoked VBN O
. . O

The DT B-Entity
ObOpenObjectByName NNP I-Entity
( NNP I-Entity
) NNP I-Entity
hook NN I-Entity
is VBZ O
designed VBN O
to TO O
hide VB B-Action
the DT B-Entity
presence NN I-Entity
of IN I-Entity
its PRP$ I-Entity
virtual JJ I-Entity
partitions NNS I-Entity
( RB O
described VBN O
later JJ O
) NN O
. . O

To TO O
encrypt VB B-Action
data NNS B-Entity
stored VBN I-Entity
on IN I-Entity
its PRP$ I-Entity
virtual JJ I-Entity
partitions NNS I-Entity
, , O
the DT B-Entity
driver NN I-Entity
sets VBZ B-Action
a DT B-Entity
hook NN I-Entity
for IN I-Entity
another DT I-Entity
API NNP I-Entity
: : O
To TO O
re-infect VB B-Action
the DT B-Entity
usermode NN I-Entity
process NN I-Entity
svchost.exe NN I-Entity
and CC O
to TO O
re-enable VB B-Action
its PRP$ B-Entity
network NN I-Entity
drivers NNS I-Entity
, , O
the DT B-Entity
rootkit NN I-Entity
hooks VBZ B-Action
these DT B-Entity
APIs NNS I-Entity
: : O
Snake NNP O
then RB O
proceeds VBZ O
to TO O
the DT O
task NN O
of IN O
deep JJ O
packet NN O
inspection NN O
and CC O
modification NN O
. . O

In IN O
order NN O
to TO O
accomplish VB O
it PRP O
, , O
it PRP B-Entity
registers VBZ B-Action
a DT B-Entity
callout NN I-Entity
driver NN I-Entity
for IN I-Entity
Windows NNP I-Entity
Filtering NNP I-Entity
Platform NNP I-Entity
( NNP I-Entity
WFP NNP I-Entity
) NNP I-Entity
, , O
an DT O
architecture NN O
first RB O
introduced VBN O
with IN O
Windows NNP O
Vista NNP O
and CC O
nowadays RB O
normally RB O
used VBN O
by IN O
antivirus NN O
and/or CC O
intrusion NN O
detection NN O
systems NNS O
to TO O
inspect/block JJ O
malicious JJ O
traffic NN O
. . O

Snake NNP O
sets VBZ O
filters NNS O
at IN O
the DT O
layers NNS O
FWPMLAYERSTREAMV4 NN O
and CC O
FWPMLAYERALEFLOWESTABLISHEDV4 NN O
in IN O
the DT O
TCP/ NNP O
IP NNP O
stack VB O
, , O
so IN O
that IN O
its PRP$ B-Entity
callout NN I-Entity
driver NN I-Entity
is VBZ B-Action
notified VBN I-Action
whenever WRB B-Modifier
a DT B-Entity
TCP NN I-Entity
connection NN I-Entity
is VBZ I-Entity
established VBN I-Entity
by IN I-Entity
a DT I-Entity
browser NN I-Entity
. . O

When WRB O
that DT O
happens VBZ O
, , O
the DT B-Entity
rootkit NN I-Entity
triggers VBZ B-Action
an DT B-Entity
event NN I-Entity
named VBN I-Entity
\BaseNamedObjects\wininetactivate NN I-Entity
. . O

When WRB B-Modifier
the DT B-Entity
data NN I-Entity
arrives VBZ I-Entity
, , O
it PRP B-Entity
is VBZ B-Action
intercepted VBN I-Action
with IN B-Modifier
the DT B-Entity
FwpsCopyStreamDataToBuffer0 NN I-Entity
( FW I-Entity
) FW I-Entity
API NN I-Entity
, , O
and CC O
then RB O
scanned VBN B-Action
for IN B-Modifier
the DT B-Entity
presence NN I-Entity
of IN I-Entity
the DT I-Entity
hidden JJ I-Entity
commands NNS I-Entity
from IN I-Entity
C NNP I-Entity
& CC I-Entity
C NNP I-Entity
. . O

The DT B-Entity
driver NN I-Entity
inspects VBZ B-Action
bidirectional JJ B-Entity
network NN I-Entity
data NNS I-Entity
on IN B-Modifier
a DT B-Entity
per IN I-Entity
stream NN I-Entity
basis NN I-Entity
, , O
as IN O
it PRP O
's VBZ O
located JJ O
right RB O
on IN O
the DT O
stream NN O
data NNS O
path NN O
. . O

An DT O
ability NN O
to TO O
manipulate VB B-Action
data NNS B-Entity
streams NNS I-Entity
is VBZ O
provided VBN O
with IN O
the DT O
packet NN O
injection NN O
logic NN O
below IN O
, , O
allowing VBG O
Snake NNP B-Entity
to TO O
covertly RB O
insert VB B-Action
traffic NN B-Entity
destined VBN I-Entity
to TO I-Entity
its PRP$ I-Entity
C NN I-Entity
& CC I-Entity
C NN I-Entity
servers NNS I-Entity
: : O
In IN O
order NN O
to TO O
qualify VB O
as IN O
a DT O
browser NN O
, , O
the DT O
usermode NN O
process NN O
must MD O
have VB O
any DT O
of IN O
the DT O
following JJ O
names NNS O
: : O
In IN O
addition NN O
to TO O
WFP NNP O
, , O
Snake NNP B-Entity
also RB O
hooks VBZ B-Action
the DT B-Entity
Transport NNP I-Entity
Driver NN I-Entity
Interface NNP I-Entity
( NNP I-Entity
TDI NNP I-Entity
) NNP I-Entity
network NN I-Entity
routines NNS I-Entity
by IN B-Modifier
setting VBG B-Entity
itself PRP I-Entity
up RP I-Entity
as IN I-Entity
a DT I-Entity
TDI NNP I-Entity
filter NN I-Entity
driver NN I-Entity
. . O

TDI NNP O
is VBZ O
considered VBN O
deprecated VBN O
and CC O
will MD O
be VB O
removed VBN O
in IN O
future JJ O
versions NNS O
of IN O
Microsoft NNP O
Windows NNP O
, , O
but CC O
it PRP O
's VBZ O
still RB O
supported VBN O
on IN O
Windows NNP O
7 CD O
. . O

Being VBG O
registered VBN B-Action
as IN B-Modifier
a DT B-Entity
TDI NNP I-Entity
driver NN I-Entity
on IN B-Modifier
the DT B-Entity
device NN I-Entity
stack VBP I-Entity
, , O
Snake NNP B-Entity
hooks VBZ B-Action
TCP NN B-Entity
calls NNS I-Entity
. . O

This DT O
way NN O
it PRP B-Entity
intercepts VBZ B-Action
all DT B-Entity
requests NNS I-Entity
along IN I-Entity
with IN I-Entity
their PRP$ I-Entity
parameters NNS I-Entity
via IN B-Modifier
IRP NNP B-Entity
( NNP I-Entity
IO NNP I-Entity
request NN I-Entity
package NN I-Entity
) CD I-Entity
hooks NNS I-Entity
. . O

By IN O
'sniffing NN O
' '' O
all PDT O
the DT O
requests NNS O
, , O
it PRP B-Entity
can MD O
now RB O
inspect VB B-Action
the DT B-Entity
traffic NN I-Entity
, , O
looking VBG B-Action
for IN I-Action
and CC I-Action
then RB I-Action
parsing VBG I-Action
GET VB B-Entity
/ / I-Entity
POST VB I-Entity
HTTP NNP I-Entity
requests NNS I-Entity
and CC I-Entity
also RB I-Entity
SMTP NNP I-Entity
communications NNS I-Entity
, , O
in IN O
order NN O
to TO O
distinguish VB B-Action
commands NNS B-Entity
addressed VBN I-Entity
to TO I-Entity
itself PRP I-Entity
. . O

If IN O
the DT B-Entity
rootkit NN I-Entity
detects VBZ B-Action
that IN B-Modifier
the DT B-Entity
OS NN I-Entity
version NN I-Entity
is VBZ I-Entity
pre-Vista NNP I-Entity
( NNP I-Entity
e.g NNP I-Entity
. . I-Entity
Windows NNP I-Entity
XP NN I-Entity
) CD I-Entity
or CC I-Entity
Windows NNP I-Entity
Server NN I-Entity
2008 CD I-Entity
( FW I-Entity
e.g FW I-Entity
. . I-Entity
Windows NNP I-Entity
Server NN I-Entity
2003 CD I-Entity
) NN I-Entity
, , O
it PRP B-Entity
will MD O
invoke VB B-Action
FwpsStreamInjectAsync0 NNP B-Entity
( NNP I-Entity
) NNP I-Entity
API NNP I-Entity
in IN O
order NN O
to TO O
generate VB B-Action
outbound NN B-Entity
requests NNS I-Entity
. . O

Whenever NNP B-Modifier
the DT B-Entity
client NN I-Entity
establishes VBZ I-Entity
connections NNS I-Entity
, , O
the DT B-Entity
TDI NNP I-Entity
driver NN I-Entity
will MD O
also RB O
'pulse VB B-Action
' '' I-Action
the DT B-Entity
\BaseNamedObjects\wininetactivate NN I-Entity
event NN I-Entity
, , O
just RB O
like IN O
the DT O
WPF NNP O
driver NN O
's POS O
component NN O
of IN O
it PRP O
, , O
in IN O
order NN O
to TO O
notify VB O
the DT O
userland NN O
service NN O
about IN O
the DT O
event NN O
. . O

The DT B-Entity
data NNS I-Entity
that IN O
the DT B-Entity
driver NN I-Entity
intercepts NNS B-Action
, , O
along IN O
with IN O
the DT O
important JJ O
notifications NNS O
, , O
is VBZ O
passed VBN O
to TO O
the DT O
userland NN O
DLL NNP O
to TO O
be VB O
processed VBN O
. . O

If IN B-Modifier
the DT B-Entity
data NN I-Entity
contains VBZ I-Entity
commands NNS I-Entity
from IN I-Entity
C NNP I-Entity
& CC I-Entity
C NNP I-Entity
, , O
the DT B-Entity
DLL NNP I-Entity
module NN I-Entity
is VBZ O
expected VBN O
to TO O
execute VB B-Action
them PRP B-Entity
and CC O
report NN O
results NNS O
back RB O
to TO O
the DT B-Entity
driver NN I-Entity
to TO O
be VB B-Action
delivered VBN I-Action
back RB B-Modifier
to TO I-Modifier
C NNP B-Entity
& CC I-Entity
C NNP I-Entity
. . O

For IN O
NDIS NN O
versions NNS O
5.X NNP O
, , O
Snake NNP O
rootkit NN O
contains VBZ O
code NN B-Entity
that WDT O
installs VBZ B-Action
NDIS NN B-Entity
filter NN I-Entity
intermediate JJ I-Entity
driver NN I-Entity
. . O

This DT B-Entity
driver NN I-Entity
is VBZ B-Action
set VBN I-Action
up RP I-Action
above IN B-Modifier
a DT B-Entity
miniport NN I-Entity
driver NN I-Entity
( CD O
a DT O
driver NN O
that WDT O
communicates VBZ O
with IN O
the DT O
physical JJ O
device NN O
) NN O
and CC O
below IN B-Modifier
a DT B-Entity
protocol NN I-Entity
driver NN I-Entity
( CD O
a DT O
driver NN O
that WDT O
implements VBZ O
a DT O
protocol NN O
, , O
e.g NN O
. . O

TCP/IP FW O
) FW O
. . O

The DT B-Entity
driver NN I-Entity
is VBZ B-Action
registered VBN I-Action
with IN B-Modifier
NdisIMRegisterLayeredMiniport NNP B-Entity
( NNP I-Entity
) NNP I-Entity
API NNP I-Entity
. . O

After IN O
that DT O
, , O
the DT B-Entity
drivers NNS I-Entity
hooks VBZ B-Action
the DT B-Entity
following JJ I-Entity
exports NNS I-Entity
within IN B-Modifier
ndis.sys NNS B-Entity
: : O
The DT O
rootkit NN O
contains VBZ O
code NN B-Entity
that WDT O
installs VBZ B-Action
NDIS NN B-Entity
filter NN I-Entity
driver NN I-Entity
for IN I-Entity
NDIS NN I-Entity
6.0 CD I-Entity
and CC I-Entity
above JJ I-Entity
: : O
NDIS NN B-Entity
filter NN I-Entity
driver NN I-Entity
configuration NN I-Entity
is VBZ B-Action
stored VBN I-Action
in IN B-Modifier
the DT B-Entity
registry NN I-Entity
entry NN I-Entity
: : O
The DT B-Entity
driver NN I-Entity
is VBZ B-Action
registered VBN I-Action
with IN B-Modifier
NdisFRegisterFilterDriver NNP B-Entity
( NNP I-Entity
) NNP I-Entity
API NNP I-Entity
. . O

After IN O
that DT O
, , O
the DT B-Entity
drivers NNS I-Entity
hooks VBZ B-Action
the DT B-Entity
following JJ I-Entity
exports NNS I-Entity
within IN B-Modifier
ndis.sys NNP B-Entity
( NNP I-Entity
for IN I-Entity
NDIS NNP I-Entity
6.0 CD I-Entity
) NN I-Entity
: : O
Another DT B-Entity
set NN I-Entity
of IN I-Entity
exports NNS I-Entity
it PRP B-Entity
attempts VBZ O
to TO O
hook NN B-Action
in IN B-Modifier
ndis.sys NNP B-Entity
( NNP I-Entity
for IN I-Entity
NDIS NNP I-Entity
6.0 CD I-Entity
) NN I-Entity
is VBZ O
: : O
With IN O
the DT B-Entity
hooks NNS I-Entity
installed VBN B-Action
, , O
whenever WRB O
the DT O
network NN O
adapter NN O
driver NN O
attempts VBZ O
to TO O
register VB O
to TO O
NDIS NNP O
, , O
or CC O
whenever WRB O
there EX O
is VBZ O
an DT O
attempt NN O
to TO O
install VB O
NDIS NNP O
intermediate JJ O
driver NN O
or CC O
NDIS NN O
filter NN O
driver NN O
, , O
the DT B-Entity
hook NN I-Entity
handlers NNS I-Entity
will MD O
register VB B-Action
Snake NNP B-Entity
's POS I-Entity
own JJ I-Entity
MiniportXxx NNP I-Entity
functions NNS I-Entity
with IN B-Modifier
the DT B-Entity
NDIS NN I-Entity
library NN I-Entity
. . O

With IN O
its PRP$ O
own JJ O
miniport NN O
handler NN O
functions NNS O
, , O
it PRP B-Entity
can MD O
send VB B-Action
/ / O
receive VB B-Action
data NNS B-Entity
by IN B-Modifier
using VBG B-Entity
a DT I-Entity
private JJ I-Entity
TCP/IP NN I-Entity
stack VBP I-Entity
, , O
bypassing VBG B-Action
all DT B-Entity
firewall NN I-Entity
hooks NNS I-Entity
, , O
and CC O
making VBG B-Action
its PRP$ B-Entity
open JJ I-Entity
ports NNS I-Entity
invisible JJ B-Entity
to TO I-Entity
scanners NNS I-Entity
. . O

The DT B-Entity
Snake NNP I-Entity
rootkit NN I-Entity
registers VBZ B-Action
itself PRP B-Entity
as IN B-Modifier
Network NNP B-Entity
Driver NN I-Entity
Interface NNP I-Entity
Specification NNP I-Entity
( FW I-Entity
NDIS FW I-Entity
) FW I-Entity
protocol NN I-Entity
driver NN I-Entity
. . O

Whenever NNP O
the DT B-Entity
underlying VBG I-Entity
miniport NN I-Entity
driver NN I-Entity
receives VBZ B-Action
data NNS B-Entity
from IN B-Modifier
the DT B-Entity
network NN I-Entity
, , O
it PRP B-Entity
calls VBZ O
NDIS NN O
by IN O
invoking VBG B-Action
a DT B-Entity
data NNS I-Entity
receive VBP I-Entity
indication NN I-Entity
function NN I-Entity
NdisMIndicateReceiveNetBufferLists NNP I-Entity
( NNP I-Entity
) NNP I-Entity
. . O

When WRB O
that DT O
happens VBZ O
, , O
NDIS NNP B-Entity
invokes VBZ B-Action
Snake NNP B-Entity
's POS I-Entity
hook NN I-Entity
function NN I-Entity
( FW O
ProtocolReceiveNetBufferLists FW O
) NN O
to TO O
process VB O
the DT O
received JJ O
data NNS O
. . O

To TO O
send VB B-Action
the DT B-Entity
data NNS I-Entity
back RB O
, , O
the DT B-Entity
protocol NN I-Entity
driver NN I-Entity
defines VBZ B-Action
the DT B-Entity
data NNS I-Entity
in IN B-Modifier
a DT B-Entity
list NN I-Entity
of IN I-Entity
NETBUFFERLIST NN I-Entity
structures NNS I-Entity
, , O
and CC O
then RB O
passes VBZ O
them PRP O
to TO O
NDIS NNP O
by IN O
calling VBG B-Action
NdisSendNetBufferLists NNP B-Entity
( NNP I-Entity
) NNP I-Entity
. . O

NDIS NNP B-Entity
, , O
in IN O
turn NN O
, , O
calls VBZ B-Action
the DT B-Entity
miniport FW I-Entity
driver's FW I-Entity
MiniportSendNetBufferLists FW I-Entity
( FW I-Entity
) FW I-Entity
function NN I-Entity
to TO O
forward RB O
the DT O
data NNS O
to TO O
an DT O
underlying JJ O
miniport NN O
driver NN O
. . O

Being VBG O
able JJ O
to TO O
fully RB O
manipulate VB B-Action
traffic NN B-Entity
at IN B-Modifier
3 CD B-Entity
different JJ I-Entity
levels NNS I-Entity
( FW I-Entity
NDIS FW I-Entity
protocol NN I-Entity
driver NN I-Entity
, , I-Entity
TDI NN I-Entity
Driver NN I-Entity
, , I-Entity
and CC I-Entity
WPF FW I-Entity
callout FW I-Entity
driver NN I-Entity
) NN I-Entity
, , O
Snake NNP B-Entity
is VBZ O
able JJ O
to TO O
'inject VB B-Action
' '' I-Action
the DT B-Entity
traffic NN I-Entity
into IN B-Modifier
existing VBG B-Entity
communications NNS I-Entity
to TO O
reach VB B-Action
out RP I-Action
to TO B-Modifier
external JJ B-Entity
components NNS I-Entity
, , O
and CC O
at IN O
the DT O
same JJ O
time NN O
parse VB B-Action
all DT B-Entity
incoming JJ I-Entity
traffic NN I-Entity
to TO O
detect VB B-Action
traffic NN B-Entity
addressed VBN I-Entity
to TO I-Entity
itself PRP I-Entity
: : O
As IN O
the DT B-Entity
driver NN I-Entity
intercepts VBZ B-Action
all DT B-Entity
connections NNS I-Entity
( FW O
e.g FW O
. . O

on IN O
TDIRECEIVE NNP O
TDI NNP O
event NN O
or CC O
ClientEventReceive NNP O
( NNP O
) NNP O
event NN O
notification NN O
triggered VBD O
through IN O
its PRP$ O
TDI NNP O
Filter NNP O
Driver NN O
) NN O
, , O
it PRP B-Entity
parses VBZ B-Action
all DT B-Entity
incoming JJ I-Entity
HTTP NN I-Entity
and CC I-Entity
SMTP NN I-Entity
traffic NN I-Entity
to TO O
see VB O
if IN O
it PRP B-Entity
can MD O
be VB B-Action
authenticated VBN I-Action
as IN B-Modifier
Snake NNP B-Entity
traffic NN I-Entity
. . O

The DT B-Entity
authentication NN I-Entity
is VBZ B-Action
implemented VBN I-Action
by IN O
decrypting VBG B-Action
the DT B-Entity
data NNS I-Entity
and CC O
making VBG B-Action
sure JJ I-Action
it PRP B-Entity
starts VBZ I-Entity
with IN I-Entity
the DT I-Entity
markers NNS I-Entity
0xDEADBEAF NN I-Entity
and CC I-Entity
0xC001BA5E NN I-Entity
( NN I-Entity
which WDT I-Entity
appear VBP I-Entity
to TO I-Entity
derive VB I-Entity
from IN I-Entity
'DEAD NNP I-Entity
BEEF NNP I-Entity
' POS I-Entity
and CC I-Entity
'COOL NNP I-Entity
BASE NNP I-Entity
' POS I-Entity
) NN I-Entity
. . O

Here RB O
are VBP O
specific JJ O
steps NNS O
: : O
By IN O
observing VBG O
such JJ O
behaviour NN O
, , O
one CD O
might NN O
wonder NN O
why WRB O
the DT O
driver NN O
is VBZ O
expecting VBG O
HTTP NN O
or CC O
SMTP NN O
clients NNS O
? . O
Why WRB O
does VBZ O
it PRP O
act VB O
like IN O
HTTP/SMTP NN O
server NN O
processing NN O
client NN O
traffic NN O
, , O
and CC O
serving VBG O
back RB O
normal JJ O
responses NNS O
as IN O
per IN O
the DT O
protocol NN O
? . O
For IN O
example NN O
, , O
in IN O
HTTP NNP O
the DT B-Entity
driver NN I-Entity
will MD O
respond VB B-Action
with IN B-Modifier
messages NNS B-Entity
like IN I-Entity
'' '' I-Entity
HTTP/1.1 NN I-Entity
200 CD I-Entity
OK JJ I-Entity
'' '' I-Entity
or CC I-Entity
'' '' I-Entity
HTTP/1.1 NN I-Entity
500 CD I-Entity
Server NN I-Entity
Error NN I-Entity
'' '' I-Entity
. . O

For IN O
SMTP NN O
traffic NN O
, , O
it PRP O
communicates VBZ O
back RB O
normal JJ O
SMTP NNP O
server NN O
responses NNS O
, , O
such JJ O
as IN O
'' '' O
250 CD O
Sender NN O
OK JJ O
'' '' O
, , O
'' '' O
503 CD O
Bad JJ O
sequence NN O
of IN O
commands NNS O
'' '' O
, , O
etc FW O
. . O

The DT O
reason NN O
behind IN O
such JJ O
behaviour NN O
is VBZ O
that IN O
the DT B-Entity
driver NN I-Entity
is VBZ B-Action
acting VBG I-Action
in IN B-Modifier
this DT B-Entity
mode NN I-Entity
like IN B-Modifier
a DT B-Entity
proxy NN I-Entity
, , O
routing VBG B-Action
requests NNS B-Entity
from IN I-Entity
other JJ I-Entity
infected JJ I-Entity
hosts NNS I-Entity
to TO B-Modifier
a DT B-Entity
remote JJ I-Entity
C NN I-Entity
& CC I-Entity
C NN I-Entity
server NN I-Entity
. . O

Another DT O
opportunity NN O
this DT O
mode NN O
unlocks VBZ O
is VBZ O
a DT O
peer-to-peer JJ O
network NN O
mode NN O
with IN O
no DT O
centralised VBN O
C NNP O
& CC O
C NNP O
. . O

The DT O
infected JJ O
hosts NNS O
are VBP O
capable JJ O
of IN O
transferring VBG O
the DT O
following VBG O
peer-2-peer NN O
commands NNS O
defining VBG O
fragment NN O
size NN O
, , O
reliability NN O
parameters NNS O
, , O
new JJ O
peer VBP O
information NN O
, , O
peer VB O
impersonation NN O
flags NNS O
, , O
etc FW O
. . O

: : O
Once RB O
the DT B-Entity
incoming JJ I-Entity
data NNS I-Entity
is VBZ B-Action
authenticated VBN I-Action
and CC I-Action
decrypted VBN I-Action
, , O
the DT O
driver NN O
passes VBZ O
it PRP O
to TO O
the DT O
DLL NN O
by IN O
using VBG O
memory NN O
pipes NNS O
. . O

For IN O
example NN O
, , O
on IN O
HTTP NN O
traffic NN O
arrival NN O
it PRP B-Entity
may MD O
send VB B-Action
traffic NN B-Entity
data NNS I-Entity
into IN B-Modifier
a DT B-Entity
memory NN I-Entity
pipe NN I-Entity
\Device\NamedPipe\isapihttp NN I-Entity
, , O
and CC O
then RB O
, , O
send VB B-Action
a DT B-Entity
received VBN I-Entity
peer-2-peer NN I-Entity
command NN I-Entity
message NN I-Entity
writepeernfo= FW I-Entity
[ FW I-Entity
IPADDRESS NN I-Entity
: : I-Entity
PORT FW I-Entity
] FW I-Entity
0fragnoscrambling=Y0 NN I-Entity
into IN B-Modifier
another DT B-Entity
memory NN I-Entity
pipe NN I-Entity
called VBN I-Entity
\Device\NamedPipe\isapidg NN I-Entity
. . O

In IN O
order NN O
to TO O
log VB B-Action
its PRP$ B-Entity
activity NN I-Entity
, , O
the DT B-Entity
driver NN I-Entity
writes VBZ B-Action
log NN B-Entity
data NNS I-Entity
into IN B-Modifier
the DT B-Entity
pipe NN I-Entity
\Device\NamedPipe\isapilog NN I-Entity
, , O
so IN O
that IN O
the DT B-Entity
DLL NNP I-Entity
could MD O
log VB B-Action
the DT B-Entity
data NNS I-Entity
into IN B-Modifier
the DT B-Entity
log NN I-Entity
files NNS I-Entity
. . O

Full JJ O
list NN O
of IN O
the DT B-Entity
named VBN I-Entity
pipes NNS I-Entity
used VBN B-Action
for IN B-Modifier
communications NNS B-Entity
is VBZ O
provided VBN O
below IN O
: : O
Messages NNS B-Entity
submitted VBN B-Action
into IN B-Modifier
the DT B-Entity
pipes NNS I-Entity
are VBP O
wrapped VBN O
into IN O
the DT O
structures NNS O
. . O

The DT O
structures NNS O
appear VBP O
to TO O
contain VB O
headers NNS O
to TO O
allow VB O
the DT B-Entity
pipe NN I-Entity
server NN I-Entity
, , O
that WDT O
runs VBZ O
within IN O
an DT O
infected JJ O
userland NN O
module NN O
, , O
to TO O
identify VB B-Action
the DT B-Entity
messages NNS I-Entity
first RB O
and CC O
then RB O
unwrap VB O
the DT O
structures NNS O
accordingly RB O
. . O

For IN O
example NN O
, , O
the DT O
message NN O
headers NNS O
could MD O
be VB O
: : O
Once RB O
received VBN B-Action
from IN B-Modifier
the DT B-Entity
pipes NNS I-Entity
and CC O
unwrapped/decoded JJ O
, , O
the DT B-Entity
data NN I-Entity
is VBZ O
then RB O
handled VBN O
by IN O
the DT O
usermode NN O
DLL NNP O
as IN O
per IN O
the DT O
data NNS O
intention NN O
- : O
whether IN O
it PRP O
's VBZ O
a DT O
traffic NN O
sniffing VBG O
task NN O
, , O
a DT O
peer-2-peer NN O
client NN O
logic NN O
, , O
a DT O
logging VBG O
task NN O
, , O
or CC O
a DT O
task NN O
of IN O
saving NN O
received VBD O
files NNS O
into IN O
the DT O
virtual JJ O
volumes NNS O
. . O

The DT B-Entity
driver NN I-Entity
creates VBZ B-Action
virtual JJ B-Entity
file NN I-Entity
volumes NNS I-Entity
for IN B-Modifier
encrypted JJ B-Entity
storage NN I-Entity
of IN I-Entity
its PRP$ I-Entity
files NNS I-Entity
and CC I-Entity
configuration NN I-Entity
data NNS I-Entity
: : O
The DT B-Entity
volumes NNS I-Entity
are VBP B-Action
mounted VBN I-Action
from IN B-Modifier
the DT B-Entity
virtual JJ I-Entity
file NN I-Entity
systems NNS I-Entity
RawDisk1 NN I-Entity
and CC I-Entity
RawDisk2 NN I-Entity
. . O

The DT B-Entity
first JJ I-Entity
partition NN I-Entity
is VBZ B-Action
created VBN I-Action
with IN B-Modifier
the DT B-Entity
following JJ I-Entity
steps NNS I-Entity
: : O
The DT B-Entity
hook NN I-Entity
installed VBN B-Action
by IN O
the DT B-Entity
rootkit NN I-Entity
on IN B-Modifier
IofCallDriver NNP B-Entity
( NNP I-Entity
) NNP I-Entity
API NNP I-Entity
provides VBZ B-Action
on-the-fly JJ B-Entity
data NNS I-Entity
encryption/decryption NN I-Entity
whenever WRB O
that DT B-Entity
data NN I-Entity
is VBZ B-Action
written VBN I-Action
to TO B-Modifier
or CC O
read VB B-Action
from IN B-Modifier
the DT B-Entity
volume NN I-Entity
. . O

The DT B-Entity
encryption NN I-Entity
algorithm NN I-Entity
is VBZ B-Action
based VBN I-Action
on IN B-Modifier
CAST-128 NN B-Entity
, , O
with IN B-Modifier
the DT B-Entity
hard-coded JJ I-Entity
key NN I-Entity
stored VBN I-Entity
in IN I-Entity
the DT I-Entity
rootkit NN I-Entity
body NN I-Entity
. . O

As IN O
a DT O
result NN O
, , O
whenever WRB O
the DT B-Entity
data NN I-Entity
is VBZ B-Action
saved VBN I-Action
into IN B-Modifier
the DT B-Entity
volume NN I-Entity
Hd1 NN I-Entity
, , O
it PRP B-Entity
will MD O
be VB B-Action
scrambled VBN I-Action
on-the-fly JJ B-Entity
, , O
and CC O
reflected VBN B-Action
in IN B-Entity
the DT I-Entity
persistent JJ I-Entity
storage NN I-Entity
file NN I-Entity
hotfix.dat NN I-Entity
, , O
which WDT O
is VBZ O
physically RB O
located JJ O
within IN O
the DT O
rootkit NN O
's POS O
'home NN O
' '' O
directory NN O
: : O
Analysis NN O
of IN O
the DT O
hotfix.dat NN O
file NN O
contents NNS O
reveals VBZ O
it PRP B-Entity
's VBZ B-Action
a DT B-Entity
fully RB I-Entity
encrypted JJ I-Entity
file NN I-Entity
with IN I-Entity
flat JJ I-Entity
entropy NN I-Entity
. . O

Thus RB O
, , O
it PRP O
is VBZ O
not RB O
possible JJ O
to TO O
reveal VB O
the DT O
contents NNS O
of IN O
the DT O
Snake NNP O
's POS O
volume NN O
by IN O
accessing VBG O
the DT O
contents NNS O
of IN O
this DT O
file NN O
( NN O
unless IN O
the DT O
encryption NN O
is VBZ O
broken VBN O
, , O
that WDT O
is VBZ O
) NNP O
. . O

Enlisting VBG O
the DT O
contents NNS O
of IN O
the DT O
created VBN O
volume NN O
is VBZ O
possible JJ O
, , O
along IN O
with IN O
creating VBG O
files NNS O
on IN O
it PRP O
: : O
However RB O
, , O
as RB O
soon RB O
as IN O
IofCallDriver NNP O
( NNP O
) NNP O
hook NN O
is VBZ O
removed VBN O
, , O
the DT O
same JJ O
'dir NN O
' '' O
command NN O
will MD O
fail VB O
, , O
as IN O
with IN O
no DT O
hook NN O
the DT O
rootkit NN O
can MD O
not RB O
decrypt VB O
the DT O
scrambled VBN O
volume NN O
: : O
The DT O
second JJ O
volume NN O
\\.\Hd2 NN O
is VBZ O
not RB O
mapped VBN O
to TO O
a DT O
file NN O
, , O
so RB O
when WRB O
a DT O
computer NN O
is VBZ O
switched VBN O
off RP O
, , O
its PRP$ O
contents NNS O
is VBZ O
lost VBN O
. . O

Thus RB O
, , O
it PRP O
could MD O
be VB O
used VBN O
as IN O
a DT O
temporary JJ O
or CC O
a DT O
cache NN O
storage NN O
. . O

The DT B-Entity
data NNS I-Entity
stored VBN I-Entity
in IN I-Entity
\\.\Hd2 NN I-Entity
is VBZ B-Action
encrypted VBN I-Action
the DT B-Entity
same JJ I-Entity
way NN I-Entity
the DT I-Entity
first JJ I-Entity
volume NN I-Entity
's POS I-Entity
data NNS I-Entity
. . O

Both DT B-Entity
volumes NNS I-Entity
appear VBP O
to TO O
be VB B-Action
set VBN I-Action
up RP I-Action
as IN B-Modifier
FAT NN B-Entity
volumes NNS I-Entity
. . O

An DT O
attempt NN O
to TO O
read VB O
the DT O
data NNS O
from IN O
these DT O
volumes NNS O
with IN O
the DT O
code NN O
below IN O
: : O
This DT O
will MD O
produce VB O
the DT O
following JJ O
results NNS O
: : O
For IN O
\\.\Hd1 NN O
: : O
For IN O
\\.\Hd2 NN O
: : O
The DT O
ability NN O
to TO O
keep VB B-Action
its PRP$ B-Entity
data NNS I-Entity
on IN B-Modifier
TrueCrypt-like JJ B-Entity
volumes NNS I-Entity
provides VBZ O
Snake NNP B-Entity
with IN O
a DT O
powerful JJ O
ability NN O
to TO O
exchange VB O
data NNS O
with IN O
the DT O
usermode NN O
DLL NNP O
, , O
as IN O
these DT O
volumes NNS O
are VBP O
accessible JJ O
both CC O
from IN O
usermode NN O
and CC O
kernel NN O
mode NN O
. . O

Static JJ O
analysis NN O
of IN O
the DT O
code NN O
reveals VBZ O
that IN O
the DT B-Entity
Snake NNP I-Entity
driver NN I-Entity
uses VBZ B-Action
virtual JJ B-Entity
volumes NNS I-Entity
to TO O
store VB B-Action
its PRP$ B-Entity
data NNS I-Entity
and CC I-Entity
additional JJ I-Entity
files NNS I-Entity
on IN B-Modifier
it PRP B-Entity
. . O

For IN O
example NN O
, , O
it PRP B-Entity
stores VBZ B-Action
its PRP$ B-Entity
message NN I-Entity
queue NN I-Entity
in IN B-Modifier
a DT B-Entity
file NN I-Entity
called VBN I-Entity
: : O
The DT O
message NN O
queue NN O
indicates VBZ O
an DT O
asynchronous JJ O
communication NN O
model NN O
between IN O
kernel NN O
mode NN O
driver NN O
and CC O
a DT O
usermode JJ O
DLL NNP O
, , O
e.g NNP O
. . O

to TO O
pass VB O
commands NNS O
, , O
configuration NN O
parameters NNS O
, , O
binary JJ O
images NNS O
of IN O
additional JJ O
Snake NNP O
components NNS O
. . O

Other JJ O
files NNS O
that WDT O
may MD O
also RB O
be VB O
found VBN O
on IN O
the DT O
virtual JJ O
volume NN O
are VBP O
: : O
klog NN O
, , O
conlog NN O
, , O
dump NN O
, , O
rknginst.exe NN O
, , O
where WRB O
rknginst.exe NN O
could MD O
be VB O
the DT O
name NN O
of IN O
the DT O
original JJ O
dropper NN O
, , O
and CC O
other JJ B-Entity
log NN I-Entity
files NNS I-Entity
could MD O
potentially RB O
contain VB B-Action
executed VBN B-Entity
command NN I-Entity
outputs NNS I-Entity
, , O
intercepted VBN B-Action
keystrokes NNS B-Entity
, , O
and CC O
other JJ O
output NN O
logs NNS O
. . O

The DT O
64-bit JJ O
version NN O
of IN O
Snake NNP O
must MD O
deal VB O
with IN O
a DT O
number NN O
of IN O
additional JJ O
security NN O
protections NNS O
implemented VBN O
in IN O
64-bit JJ O
editions NNS O
of IN O
Microsoft NNP O
Windows NNP O
, , O
the DT O
most RBS O
significant JJ O
of IN O
which WDT O
are VBP O
kernel NN O
driver NN O
signature NN O
validation NN O
and CC O
Kernel NNP O
Patch NNP O
Protection NNP O
( NNP O
more RBR O
commonly RB O
known VBN O
as IN O
PatchGuard NNP O
) NNP O
. . O

PatchGuard NNP O
is VBZ O
a DT O
feature NN O
of IN O
64-bit JJ O
Windows NNP O
which WDT O
aims VBZ O
to TO O
prevent VB O
modification NN O
of IN O
the DT O
Windows NNP O
kernel NN O
, , O
something NN O
that WDT O
is VBZ O
often RB O
performed VBN O
by IN O
malware NN O
attempting VBG O
to TO O
hide VB O
itself PRP O
on IN O
an DT O
infected JJ O
system NN O
. . O

Although IN O
PatchGuard NN O
is VBZ O
successful JJ O
at IN O
preventing VBG O
kernel NN O
patching NN O
once RB O
initialised VBD O
, , O
several JJ O
published VBN O
bypass NN O
approaches NNS O
exist VBP O
, , O
. . O

The DT O
technique NN O
used VBN O
by IN O
Snake NNP O
appears VBZ O
to TO O
be VB O
similar JJ O
to TO O
these DT O
approaches NNS O
. . O

The DT O
driver NN O
signing NN O
policy NN O
enforced VBN O
by IN O
all DT O
64-bit JJ O
versions NNS O
of IN O
Windows NNP O
from IN O
Vista NNP O
onwards NNS O
requires VBZ O
all DT O
kernel-mode JJ O
drivers NNS O
to TO O
be VB O
signed VBN O
with IN O
a DT O
valid JJ O
digital JJ O
signature NN O
. . O

The DT O
Snake NNP O
dropper NN O
contains VBZ O
both CC O
32-bit JJ O
and CC O
64-bit JJ O
unsigned JJ O
drivers NNS O
, , O
and CC O
it PRP B-Entity
can MD O
successfully RB O
load VB B-Action
its PRP$ B-Entity
unsigned JJ I-Entity
64-bit JJ I-Entity
driver NN I-Entity
on IN B-Modifier
a DT B-Entity
64-bit JJ I-Entity
version NN I-Entity
of IN I-Entity
Windows NNP I-Entity
XP NN I-Entity
– NN O
as IN O
driver NN O
signing NN O
is VBZ O
not RB O
enforced VBN O
it PRP O
does VBZ O
not RB O
have VB O
to TO O
resort VB O
to TO O
any DT O
tricks NNS O
under IN O
this DT O
OS NN O
version NN O
. . O

In IN O
this DT O
case NN O
, , O
in IN O
order NN O
to TO O
ensure VB B-Action
the DT B-Entity
driver NN I-Entity
is VBZ I-Entity
loaded VBN I-Entity
automatically RB I-Entity
at IN I-Entity
startup NN I-Entity
, , O
the DT B-Entity
dropper NN I-Entity
can MD O
install VB B-Action
the DT B-Entity
64-bit JJ I-Entity
driver NN I-Entity
on IN B-Modifier
64-bit JJ B-Entity
Windows NNP I-Entity
XP NN I-Entity
in IN O
the DT O
same JJ O
way NN O
it PRP B-Entity
installs VBZ B-Action
a DT B-Entity
32-bit JJ I-Entity
driver NN I-Entity
on IN B-Modifier
a DT B-Entity
32-bit JJ I-Entity
version NN I-Entity
of IN I-Entity
Windows NNP I-Entity
XP NN I-Entity
. . O

On IN B-Modifier
64-bit JJ B-Entity
versions NNS I-Entity
of IN I-Entity
Windows NNP I-Entity
Vista NNP I-Entity
and CC I-Entity
above IN I-Entity
it PRP B-Entity
behaves VBZ B-Action
differently RB B-Entity
. . O

Firstly RB O
, , O
the DT B-Entity
64-bit JJ I-Entity
unsigned JJ I-Entity
driver NN I-Entity
file NN I-Entity
is VBZ B-Action
created VBN I-Action
as IN O
usual JJ O
: : O
However RB O
, , O
the DT O
driver NN O
is VBZ O
not RB O
registered VBN O
; : O
what WP O
is VBZ B-Action
registered VBN I-Action
instead RB O
is VBZ O
the DT B-Entity
dropper NN I-Entity
itself PRP I-Entity
. . O

To TO O
do VB O
that DT O
, , O
the DT B-Entity
dropper NN I-Entity
first JJ O
copies NNS B-Action
itself PRP B-Entity
as IN O
: : O
The DT B-Entity
dropper NN I-Entity
then RB O
registers VBZ B-Action
itself PRP B-Entity
as IN B-Modifier
a DT B-Entity
service NN I-Entity
to TO O
ensure VB B-Action
it PRP B-Entity
starts VBZ I-Entity
every DT I-Entity
time NN I-Entity
Windows NNP I-Entity
is VBZ I-Entity
booted VBN I-Entity
, , O
by IN O
creating VBG O
the DT O
values NNS O
: : O
Now RB O
comes VBZ O
the DT O
most RBS O
interesting JJ O
part NN O
: : O
does VBZ O
the DT O
dropper NN O
manage VBP O
to TO O
load VB O
its PRP$ O
64-bit JJ O
unsigned JJ O
driver NN O
under IN O
64-bit JJ O
versions NNS O
of IN O
Windows NNP O
Vista NNP O
and CC O
later JJ O
versions NNS O
, , O
such JJ O
as IN O
64-bit JJ O
Windows NNP O
7/8 CD O
? . O
The DT O
answer NN O
: : O
Yes UH O
, , O
it PRP O
does VBZ O
. . O

Does VBZ O
it PRP O
resort NN O
to TO O
using VBG O
bootkit NN O
technology NN O
, , O
which WDT O
has VBZ O
been VBN O
used VBN O
in IN O
the DT O
past NN O
to TO O
bypass VB O
protections NNS O
to TO O
load VB O
unsigned JJ O
64-bit JJ O
drivers NNS O
? . O
The DT O
answer NN O
: : O
No DT O
. . O

Bootkits NNPS O
must MD O
overwrite VB O
the DT O
Master NNP O
Boot NNP O
Record NNP O
( NNP O
MBR NNP O
) NN O
and CC O
antivirus NN O
products NNS O
are VBP O
well RB O
trained VBN O
to TO O
catch VB O
that DT O
kind NN O
of IN O
bad JJ O
behavior NN O
. . O

The DT O
masterminds NNS O
behind IN O
Snake NNP O
rootkit NN O
seem VBP O
to TO O
be VB O
well RB O
aware JJ O
of IN O
this DT O
so RB O
what WP O
they PRP O
resorted VBD O
to TO O
instead RB O
is VBZ O
leveraging VBG O
a DT O
vulnerability NN O
in IN O
a DT O
well-known JJ O
virtualization NN O
product NN O
called VBN O
VirtualBox NNP O
, , O
a DT O
product NN O
made VBN O
by IN O
Oracle NNP O
which WDT O
is VBZ O
widely RB O
used VBN O
by IN O
researchers NNS O
to TO O
analyse VB O
malware NN O
. . O

VirtualBox NN O
driver NN O
version NN O
1.6.2 CD O
was VBD O
released VBN O
in IN O
June NNP O
2 CD O
, , O
2008 CD O
. . O

Two CD O
months NNS O
later RB O
, , O
in IN O
August NNP O
2008 CD O
, , O
security NN O
researchers NNS O
reported VBD O
that IN O
its PRP$ O
main JJ O
driver NN O
component NN O
, , O
which WDT O
is VBZ O
signed VBN O
under IN O
the DT O
entity NN O
'' '' O
innotek FW O
Gmbh FW O
'' '' O
, , O
contained VBD O
a DT O
privilege NN O
escalation NN O
vulnerability NN O
. . O

In IN O
a DT O
nutshell NN O
, , O
the DT O
VirtualBox NNP O
software NN O
installs VBZ O
a DT O
driver NN O
called VBN O
VBoxDrv NNP O
. . O

The DT O
driver NN O
is VBZ O
controlled VBN O
with IN O
the DT O
Input/Ouput NNP O
Control NNP O
Codes NNS O
( VBP O
32-bit JJ O
values NNS O
called VBN O
IOCTL FW O
) FW O
passed VBN O
along IN O
DeviceIoControl NNP O
( NNP O
) NNP O
API NNP O
. . O

One CD O
of IN O
the DT O
documented JJ O
transfer NN O
methods NNS O
that IN O
the DT O
system NN O
uses VBZ O
to TO O
pass VB O
data NNS O
between IN O
the DT O
caller NN O
of IN O
DeviceIoControl NNP O
( NNP O
) NNP O
API NNP O
and CC O
the DT O
driver NN O
itself PRP O
is VBZ O
called VBN O
METHODNEITHER NN O
. . O

As IN O
per FW O
MSDN FW O
documentation NN O
, , O
METHODNEITHER NN O
is VBZ O
a DT O
special JJ O
transfer NN O
type NN O
when WRB O
Input/Output NNP O
Request NNP O
Packet NNP O
( NNP O
IRP NNP O
) NNP O
supplies VBZ O
the DT O
user-mode JJ O
virtual JJ O
addresses NNS O
of IN O
the DT O
input NN O
and CC O
output NN O
buffers NNS O
, , O
without IN O
validating VBG O
or CC O
mapping VBG O
them PRP O
. . O

It PRP O
is VBZ O
the DT O
responsibility NN O
of IN O
the DT O
driver NN O
to TO O
validate VB O
the DT O
addresses NNS O
sent VBN O
from IN O
user NN O
mode NN O
in IN O
order NN O
to TO O
make VB O
sure JJ O
those DT O
addresses NNS O
are VBP O
valid JJ O
usermode JJ O
addresses NNS O
. . O

The DT O
source NN O
code NN O
of IN O
the DT O
vulnerable JJ O
driver NN O
( NN O
shown VBN O
below IN O
) NN O
demonstrates VBZ O
how WRB O
the DT O
integer NN O
value NN O
of IN O
the DT O
rc NN O
variable NN O
is VBZ O
first RB O
derived VBN O
from IN O
the DT O
input NN O
parameters NNS O
pDevObj FW O
( FW O
device NN O
object NN O
) NN O
and CC O
pIrp FW O
( FW O
request NN O
packet NN O
) NN O
. . O

Next NNP O
, , O
that IN O
integer NN O
value NN O
is VBZ O
written VBN O
into IN O
the DT O
UserBuffer NNP O
- : O
an DT O
arbitrary JJ O
address NN O
, , O
pointed VBN O
by IN O
the DT O
input NN O
parameter NN O
pIrp FW O
( FW O
request NN O
packet NN O
) NN O
. . O

As IN O
there EX O
are VBP O
no DT O
validations NNS O
made VBN O
for IN O
the DT O
UserBuffer NNP O
an DT B-Entity
attacker NN I-Entity
can MD O
craft VB B-Action
such JJ B-Entity
input NN I-Entity
parameters NNS I-Entity
that WDT I-Entity
will MD I-Entity
define VB I-Entity
address NN I-Entity
within IN I-Entity
kernel NN I-Entity
memory NN I-Entity
to TO I-Entity
patch NN I-Entity
and CC I-Entity
the DT I-Entity
data NNS I-Entity
to TO I-Entity
patch NN I-Entity
it PRP I-Entity
with IN O
: : O
Now RB O
that IN O
the DT B-Entity
vulnerable JJ I-Entity
driver NN I-Entity
can MD O
be VB B-Action
used VBN I-Action
as IN B-Modifier
a DT B-Entity
weapon NN I-Entity
to TO I-Entity
patch NN I-Entity
kernel NN I-Entity
memory NN I-Entity
, , O
all PDT O
the DT O
malware NN O
needs VBZ O
to TO O
do VB O
is VBZ O
to TO O
patch NN O
the DT O
content NN O
of IN O
the DT O
variable JJ O
nt NN O
! . O
gCiEnabled VBN O
, , O
a DT O
boolean JJ O
variable NN O
'' '' O
Code NNP O
Integrity NNP O
Enabled NNP O
'' '' O
that IN O
marks NNS O
whether IN O
the DT O
system NN O
was VBD O
booted VBN O
in IN O
WinPE NN O
mode NN O
. . O

When WRB O
running VBG O
in IN O
WinPE NN O
mode NN O
there EX O
is VBZ O
no DT O
Code NNP O
Integrity NNP O
control NN O
, , O
therefore RB O
by IN O
enabling VBG O
this DT O
mode NN O
by IN O
patching VBG O
only RB O
one CD O
bit NN O
, , O
Code NNP B-Entity
Integrity NNP I-Entity
verification NN I-Entity
is VBZ B-Action
disabled JJ I-Action
so IN O
that IN O
the DT B-Entity
unsigned JJ I-Entity
64-bit JJ I-Entity
driver NN I-Entity
can MD O
be VB B-Action
loaded VBN I-Action
. . O

This DT O
variable NN O
is VBZ O
used VBN O
within IN O
the DT O
function NN O
SepInitializeCodeIntegrity NNP O
( NNP O
) NNP O
, , O
implemented VBN O
within IN O
CI.dll NN O
's POS O
function NN O
CiInitialize NNP O
( NNP O
) NNP O
and CC O
imported VBN O
by IN O
the DT O
NT NNP O
core NN O
( NNP O
ntoskrnl.exe NNP O
) NNP O
. . O

In IN O
order NN O
to TO O
find VB O
the DT O
variable NN O
in IN O
kernel NN O
memory NN O
, , O
the DT B-Entity
Snake NNP I-Entity
dropper NN I-Entity
loads NNS B-Action
a DT B-Entity
copy NN I-Entity
of IN I-Entity
the DT I-Entity
NT NN I-Entity
core NN I-Entity
image NN I-Entity
( NNP I-Entity
ntoskrnl.exe NNP I-Entity
) NNP I-Entity
, , O
locates VBZ B-Action
the DT B-Entity
import NN I-Entity
of IN I-Entity
CI.dll NN I-Entity
's POS I-Entity
function NN I-Entity
CiInitialize NNP I-Entity
( NNP I-Entity
) NNP I-Entity
, , O
and CC O
then RB O
SepInitializeCodeIntegrity NNP B-Entity
( NNP I-Entity
) NNP I-Entity
within IN I-Entity
it PRP I-Entity
. . O

Then RB O
it PRP B-Entity
parses VBZ B-Action
the DT B-Entity
function NN I-Entity
's POS I-Entity
code NN I-Entity
to TO B-Modifier
locate VB B-Entity
the DT I-Entity
offset VBN I-Entity
of IN I-Entity
the DT I-Entity
variable NN I-Entity
. . O

Once RB O
located JJ O
, , O
the DT O
content NN O
of IN O
the DT O
variable JJ O
nt NN O
! . O
gCiEnabled VBN O
is VBZ O
patched VBN O
in IN O
kernel NN O
memory NN O
and CC O
the DT B-Entity
64-bit JJ I-Entity
unsigned JJ I-Entity
driver NN I-Entity
is VBZ B-Action
loaded VBN I-Action
. . O

This DT O
explains VBZ O
why WRB O
Snake NNP B-Entity
dropper NN I-Entity
registers VBZ B-Action
itself PRP B-Entity
as IN B-Modifier
a DT B-Entity
service NN I-Entity
to TO O
start VB B-Action
each DT B-Entity
time NN I-Entity
Windows NNP I-Entity
starts VBZ I-Entity
: : O
in IN O
order NN O
to TO O
install VB B-Action
the DT B-Entity
vulnerable JJ I-Entity
VBox NN I-Entity
driver NN I-Entity
first RB O
, , O
then RB O
pass VB O
it PRP O
a DT O
malformed JJ O
structure NN O
to TO O
disable VB B-Action
Code NNP B-Entity
Integrity NNP I-Entity
control NN I-Entity
with IN B-Modifier
a DT B-Entity
DeviceIoControl NNP I-Entity
( NNP I-Entity
) NNP I-Entity
API NNP I-Entity
call NN I-Entity
, , O
and CC O
finally RB O
, , O
load VBP B-Action
the DT B-Entity
driver NN I-Entity
. . O

In IN O
order NN O
to TO O
be VB O
able JJ O
to TO O
perform VB O
the DT O
steps NNS O
above RB O
, , O
the DT B-Entity
dropper NN I-Entity
must MD O
first RB O
obtain VB B-Action
Administrator NNP B-Entity
privileges NNS I-Entity
. . O

It PRP B-Entity
attempts VBZ O
to TO O
do VB O
this DT O
by IN O
running VBG B-Action
MS09-025 NN B-Entity
and CC I-Entity
MS10-015 NN I-Entity
exploits NNS I-Entity
on IN B-Modifier
the DT B-Entity
target NN I-Entity
system NN I-Entity
. . O

These DT O
exploits NNS O
are VBP O
bundled VBN O
within IN O
the DT O
dropper NN O
in IN O
its PRP$ O
resource NN O
section NN O
as IN O
executable JJ O
files NNS O
. . O

Other JJ O
resources NNS O
embedded VBN O
within IN O
the DT O
dropper NN O
are VBP O
the DT O
32-bit JJ O
and CC O
64-bit JJ O
builds NNS O
of IN O
its PRP$ O
driver NN O
, , O
a DT B-Entity
tool NN I-Entity
for IN O
creating VBG B-Action
NTFS NN B-Entity
file NN I-Entity
systems NNS I-Entity
, , O
and CC O
the DT B-Entity
initial JJ I-Entity
message NN I-Entity
queue NN I-Entity
file NN I-Entity
which WDT O
is VBZ B-Action
written VBN I-Action
into IN B-Modifier
the DT B-Entity
virtual JJ I-Entity
volume NN I-Entity
. . O

The DT O
message NN O
queue NN O
file NN O
contains VBZ O
configuration NN O
data NNS O
and CC O
the DT O
libraries NNS B-Entity
that WDT O
will MD O
be VB B-Action
injected VBN I-Action
into IN B-Modifier
usermode NN B-Entity
processes NNS I-Entity
. . O

The DT B-Entity
usermode JJ I-Entity
DLLs NNS I-Entity
injected VBN B-Action
by IN O
the DT B-Entity
kernel-mode JJ I-Entity
driver NN I-Entity
into IN B-Modifier
the DT B-Entity
userland NN I-Entity
system NN I-Entity
process NN I-Entity
( FW O
e.g FW O
. . O

explorer.exe FW O
) FW O
are VBP O
: : O
The DT B-Entity
rkctlWin32.dll/rkctlx64.dll NN I-Entity
module NN I-Entity
uses VBZ B-Action
the DT B-Entity
following JJ I-Entity
hard-coded JJ I-Entity
named VBN I-Entity
pipe NN I-Entity
for IN B-Modifier
communications NNS B-Entity
: : O
The DT B-Entity
remote JJ I-Entity
commands NNS I-Entity
it PRP B-Entity
receives VBZ B-Action
appear VBP O
to TO O
be VB O
designed VBN O
to TO O
control VB B-Action
other JJ B-Entity
components NNS I-Entity
of IN I-Entity
Snake NNP I-Entity
: : O
The DT O
injsnakeWin32.dll/injsnakex64.dll NN O
module NN O
exports VBZ O
61 CD O
functions NNS O
. . O

It PRP O
is VBZ O
designed VBN O
to TO O
perform VB O
the DT O
high-level JJ O
tasks NNS O
such JJ O
as IN O
: : O
When WRB O
the DT B-Entity
DLL NNP I-Entity
activates VBZ B-Action
, , O
it PRP B-Entity
reads VBZ B-Action
configuration NN B-Entity
parameters NNS I-Entity
from IN B-Modifier
the DT B-Entity
configuration NN I-Entity
queue NN I-Entity
, , O
that IN O
the DT B-Entity
driver NN I-Entity
creates VBZ B-Action
on IN B-Modifier
a DT B-Entity
virtual JJ I-Entity
volume NN I-Entity
. . O

One CD O
of IN O
the DT O
parameters NNS O
defines VBZ O
the DT B-Entity
pipe NN I-Entity
name NN I-Entity
( CD I-Entity
s NN I-Entity
) NN I-Entity
that IN O
the DT B-Entity
DLL NNP I-Entity
should MD O
use VB B-Action
for IN B-Modifier
its PRP$ B-Entity
communications NNS I-Entity
. . O

The DT B-Entity
remote JJ I-Entity
commands NNS I-Entity
received VBN B-Action
by IN O
this DT B-Entity
Snake NNP I-Entity
DLL NNP I-Entity
module NN I-Entity
are VBP O
designed VBN O
to TO O
set VB O
up RP O
various JJ O
communication NN O
parameters NNS O
: : O
To TO O
post VB B-Action
the DT B-Entity
data NNS I-Entity
, , O
the DT B-Entity
DLL NNP I-Entity
can MD O
use VB O
the DT O
following JJ O
User-Agent JJ O
string NN O
'' '' O
Mozilla/4.0 FW O
( FW O
compatible JJ O
; : O
MSIE NN O
6.0 CD O
) NN O
'' '' O
. . O

It PRP B-Entity
may MD O
rely VB B-Action
on IN I-Action
the DT B-Entity
following JJ I-Entity
Internet NNP I-Entity
Media NNP I-Entity
types NNS I-Entity
( NNP I-Entity
MIME NNP I-Entity
types NNS I-Entity
) NN I-Entity
for IN B-Modifier
data NNS B-Entity
exfiltration NN I-Entity
: : O
Request NN B-Entity
type NN I-Entity
it PRP B-Entity
uses VBZ B-Action
can MD O
either RB O
be VB B-Action
POST NN B-Entity
of IN O
GET VB B-Entity
, , O
and CC O
C NN B-Entity
& CC I-Entity
C NN I-Entity
server NN I-Entity
resource NN I-Entity
name NN I-Entity
is VBZ B-Action
/default.asp NNP B-Entity
. . O

One CD B-Entity
of IN I-Entity
the DT I-Entity
Snake NNP I-Entity
components NNS I-Entity
that WDT O
could MD O
have VB O
been VBN B-Action
downloaded VBN I-Action
from IN B-Modifier
a DT B-Entity
remote JJ I-Entity
C NN I-Entity
& CC I-Entity
C NN I-Entity
server NN I-Entity
, , O
was VBD B-Action
identified VBN I-Action
as IN B-Modifier
a DT B-Entity
network NN I-Entity
reconnaissance NN I-Entity
tool NN I-Entity
. . O

When WRB B-Modifier
run VBN B-Entity
as IN I-Entity
a DT I-Entity
command NN I-Entity
line NN I-Entity
tool NN I-Entity
, , O
with IN O
its PRP$ O
logic NN O
defined VBN O
with IN O
the DT O
command NN O
line NN O
switches VBZ O
, , O
this DT B-Entity
tool NN I-Entity
enumerates VBZ B-Action
other JJ B-Entity
network NN I-Entity
hosts NNS I-Entity
and CC O
detects VBZ B-Action
what WP B-Entity
Windows NNP I-Entity
RPC NNP I-Entity
services NNS I-Entity
are VBP I-Entity
enabled VBN I-Entity
at IN I-Entity
the DT I-Entity
endpoints NNS I-Entity
. . O

It PRP O
carries VBZ O
a DT B-Entity
list NN I-Entity
of IN I-Entity
interface NN I-Entity
identifiers NNS I-Entity
associated VBN B-Action
with IN B-Modifier
the DT B-Entity
named VBN I-Entity
pipes NNS I-Entity
. . O

It PRP B-Entity
then RB O
uses VBZ O
these DT O
identifiers NNS O
to TO O
write VB B-Action
a DT B-Entity
message NN I-Entity
to TO B-Modifier
and CC O
read VB B-Action
a DT B-Entity
message NN I-Entity
from IN B-Modifier
the DT B-Entity
associated VBN I-Entity
named VBN I-Entity
pipes NNS I-Entity
. . O

By IN O
knowing VBG O
what WP O
RPC NNP O
services NNS O
are VBP O
running VBG O
, , O
it PRP B-Entity
can MD O
successfully RB O
fingerprint NN B-Action
all DT B-Entity
network NN I-Entity
hosts NNS I-Entity
by IN B-Modifier
mimicking VBG B-Entity
the DT I-Entity
Metasploit NNP I-Entity
's POS I-Entity
logic NN I-Entity
of IN I-Entity
OS NNP I-Entity
fingerprinting VBG I-Entity
via IN I-Entity
SMB NNP I-Entity
. . O

The DT O
fingerprinting NN O
allows VBZ O
it PRP B-Entity
to TO O
reveal VB B-Action
the DT B-Entity
following JJ I-Entity
characteristics NNS I-Entity
for IN B-Modifier
each DT B-Entity
host NN I-Entity
found VBN I-Entity
in IN I-Entity
the DT I-Entity
network NN I-Entity
: : O
The DT B-Entity
data NNS I-Entity
it PRP O
retrieves VBZ O
is VBZ B-Action
encrypted VBN I-Action
and CC O
saved VBN B-Action
into IN B-Modifier
a DT B-Entity
configuration NN I-Entity
file NN I-Entity
% NN I-Entity
system NN I-Entity
% NN I-Entity
\vtmon.bin NN I-Entity
. . O

This DT B-Entity
file NN I-Entity
is VBZ B-Action
then RB I-Action
further RB I-Action
encrypted VBN I-Action
with IN B-Modifier
an DT B-Entity
NTL-based JJ I-Entity
( NN I-Entity
Number NNP I-Entity
Theory NNP I-Entity
Library NNP I-Entity
) NNP I-Entity
algorithm NN I-Entity
and CC O
is VBZ B-Action
uploaded VBN I-Action
by IN B-Modifier
the DT B-Entity
usermode-centric JJ I-Entity
Snake NNP I-Entity
rootkit NN I-Entity
to TO B-Modifier
the DT B-Entity
C NN I-Entity
& CC I-Entity
C NN I-Entity
server NN I-Entity
, , O
along IN B-Modifier
with IN I-Modifier
other JJ B-Entity
configuration NN I-Entity
files NNS I-Entity
, , I-Entity
such JJ I-Entity
as IN I-Entity
mtmon.sdb NN I-Entity
, , I-Entity
mtmon32.sdb NN I-Entity
, , I-Entity
gstatsnd.bin NN I-Entity
, , I-Entity
gstat.bin NN I-Entity
, , I-Entity
gstat32.bin NN I-Entity
, , I-Entity
and CC I-Entity
other JJ I-Entity
log NN I-Entity
files NNS I-Entity
found VBN I-Entity
in IN I-Entity
the DT I-Entity
% NN I-Entity
windows NNS I-Entity
% NN I-Entity
\ CD I-Entity
$ $ I-Entity
NtUninstallQ FW I-Entity
[ FW I-Entity
random JJ I-Entity
] NN I-Entity
$ $ I-Entity
directory NN I-Entity
. . O

By IN O
using VBG O
this DT O
function NN O
the DT B-Entity
remote JJ I-Entity
attacker NN I-Entity
can MD O
identify VB B-Action
any DT B-Entity
potentially RB I-Entity
exploitable JJ I-Entity
hosts NNS I-Entity
located JJ I-Entity
in IN I-Entity
the DT I-Entity
same JJ I-Entity
network NN I-Entity
as IN I-Entity
the DT I-Entity
victim NN I-Entity
. . O

The DT B-Entity
attacker NN I-Entity
may MD O
then RB O
craft VB O
an DT O
exploit VB O
against IN O
those DT O
hosts NNS O
, , O
possibly RB O
by IN O
using VBG O
the DT O
Metasploit NNP O
framework NN O
, , O
and CC O
then RB O
deliver VB B-Action
the DT B-Entity
generated VBN I-Entity
shellcode NN I-Entity
back RB B-Modifier
to TO I-Modifier
the DT B-Entity
reconnaissance NN I-Entity
tool NN I-Entity
to TO B-Modifier
be VB B-Entity
applied VBN I-Entity
against IN I-Entity
the DT I-Entity
identified VBN I-Entity
hosts NNS I-Entity
by IN I-Entity
running VBG I-Entity
the DT I-Entity
tool NN I-Entity
with IN I-Entity
the DT I-Entity
'expos NNS I-Entity
' POS I-Entity
switch NN I-Entity
. . O

If IN O
the DT B-Entity
tool NN I-Entity
successfully RB O
delivers VBZ B-Action
the DT B-Entity
payload NN I-Entity
and CC O
exploits VBZ B-Action
the DT B-Entity
remote JJ I-Entity
host NN I-Entity
( CD I-Entity
s NN I-Entity
) NN I-Entity
, , O
it PRP B-Entity
will MD O
replicate VB B-Action
the DT B-Entity
infection NN I-Entity
across IN B-Modifier
the DT B-Entity
network NN I-Entity
, , O
taking VBG B-Action
control NN I-Action
over IN B-Modifier
new JJ B-Entity
hosts NNS I-Entity
, , O
thus RB O
repeating VBG B-Action
the DT B-Entity
infection NN I-Entity
cycle NN I-Entity
all DT B-Entity
over IN I-Entity
again RB I-Entity
and CC O
spreading VBG B-Action
the DT B-Entity
infection NN I-Entity
further RB B-Entity
. . O

Unlike IN O
traditional JJ O
worm NN O
techniques NNS O
, , O
this DT O
process NN O
is VBZ O
rather RB O
manual JJ O
, , O
but CC O
its PRP$ O
danger NN O
is VBZ O
in IN O
the DT O
fact NN O
that IN O
the DT B-Entity
attacker NN I-Entity
can MD O
flexibly RB O
craft VB O
new JJ O
attack NN O
methods NNS O
, , O
adjusting VBG B-Action
them PRP B-Entity
to TO B-Modifier
the DT B-Entity
hosts NNS I-Entity
present JJ I-Entity
within IN I-Entity
the DT I-Entity
network NN I-Entity
, , O
thus RB O
preying VBG O
on IN O
the DT O
weakest JJS O
( NN O
least RBS O
updated VBN O
, , O
most RBS O
vulnerable JJ O
) NN O
victims NNS O
along IN O
its PRP$ O
path NN O
. . O

As IN O
seen VBN O
from IN O
the DT O
check-in NN O
logs NNS O
found VBN O
within IN O
one CD O
of IN O
the DT O
recent JJ O
samples NNS O
, , O
the DT O
time NN O
span NN O
covers VBZ O
almost RB O
6 CD O
years NNS O
from IN O
January NNP O
2007 CD O
till IN O
December NNP O
2012 CD O
, , O
which WDT O
is VBZ O
aligned VBN O
with IN O
the DT O
first JJ O
reports NNS O
of IN O
Agent.BTZ NN O
. . O

It PRP O
's VBZ O
worth JJ O
noting VBG O
that IN O
Agent.BTZ NN B-Entity
used VBD B-Action
the DT B-Entity
same JJ I-Entity
XOR NN I-Entity
key NN I-Entity
for IN B-Modifier
its PRP$ B-Entity
logs NNS I-Entity
as IN O
the DT O
most RBS O
recent JJ O
variants NNS O
: : O
Log VB B-Entity
files NNS I-Entity
created VBN B-Action
by IN O
the DT B-Entity
latest JJS I-Entity
samples NNS I-Entity
of IN I-Entity
Snake NNP I-Entity
, , O
compiled VBN O
in IN O
2013 CD O
and CC O
2014 CD O
, , O
were VBD O
successfully RB O
decrypted VBN O
with IN O
the DT O
same JJ O
XOR NN O
key NN O
. . O

Other JJ O
similarities NNS O
include VBP O
the DT O
usage NN O
of IN O
the DT O
virtual JJ O
partition NN O
\\.\Vd1 NN O
, , O
the DT O
temporary JJ O
file NN O
named VBN O
FA.tmp NN O
, , O
usage NN O
of IN O
files NNS O
named VBN O
mswmpdat.tlb NN O
, , O
wmcache.nld NN O
, , O
winview.ocx NN O
. . O

The DT O
cyber-espionage JJ O
operation NN O
behind IN O
the DT O
Snake NNP O
rootkit NN O
is VBZ O
well RB O
established VBN O
, , O
a DT O
sample NN O
comiled VBN O
in IN O
January NNP O
2006 CD O
indicates VBZ O
that IN O
the DT O
activity NN O
would MD O
have VB O
begun VBN O
in IN O
at IN O
least JJS O
2005 CD O
. . O

It PRP B-Entity
is VBZ O
also RB O
sophisticated JJ O
, , O
using VBG B-Action
complex JJ B-Entity
techniques NNS I-Entity
for IN B-Modifier
evading VBG B-Entity
host NN I-Entity
defences NNS I-Entity
and CC O
providing VBG B-Action
the DT B-Entity
attackers NNS I-Entity
covert JJ B-Entity
communication NN I-Entity
channels NNS I-Entity
. . O

Toolmarks NNPS O
left VBD O
behind RP O
by IN O
the DT O
authors NNS O
'vlad NN O
' '' O
& CC O
'gilg NN O
' '' O
, , O
leave VBP O
tantalizing JJ O
clues NNS O
as IN O
to TO O
the DT O
personas NNS O
behind IN O
this DT O
. . O

From IN O
a DT O
technical JJ O
perspective NN O
, , O
Snake NNP O
demonstrates VBZ O
two CD O
very RB O
different JJ O
approaches NNS O
to TO O
the DT O
task NN O
of IN O
building VBG O
a DT O
cyber-espionage JJ O
toolkit NN O
. . O

One CD O
approach NN O
is VBZ O
to TO O
delegate VB B-Action
the DT B-Entity
network NN I-Entity
communication NN I-Entity
engine NN I-Entity
to TO B-Modifier
usermode NN B-Entity
code NN I-Entity
, , O
backed VBD O
up RP O
by IN O
a DT O
usermode NN O
rootkit NN O
. . O

Another DT O
approach NN O
is VBZ O
to TO O
carry VB B-Action
out RP I-Action
all DT B-Entity
of IN I-Entity
the DT I-Entity
communications NNS I-Entity
from IN B-Modifier
the DT B-Entity
kernel-mode JJ I-Entity
driver NN I-Entity
, , O
which WDT O
is VBZ O
a DT O
very RB O
challenging JJ O
task NN O
by IN O
itself PRP O
. . O

The DT O
complexity NN O
of IN O
the DT O
usermode-centric JJ O
approach NN O
is VBZ O
on IN O
par NN O
with IN O
Rustock NN O
rootkit NN O
- : O
it PRP O
uses VBZ O
similar JJ O
techniques NNS O
. . O

It PRP O
's VBZ O
an DT O
old JJ O
well-polished JJ O
technology NN O
that WDT O
evolved VBD O
over IN O
the DT O
years NNS O
and CC O
demonstrated VBD O
its PRP$ O
resilience NN O
and CC O
survivability NN O
under IN O
the DT O
stress NN O
of IN O
security NN O
counter- NN O
measures NNS O
. . O

The DT O
complexity NN O
of IN O
the DT O
kernel-centric JJ O
architecture NN O
of IN O
Snake NNP O
is VBZ O
quite RB O
unique JJ O
. . O

This DT O
architecture NN O
is VBZ O
designed VBN O
to TO O
grant VB O
Snake NNP O
as IN O
much JJ O
flexibility NN O
as IN O
possible JJ O
. . O

When WRB B-Modifier
most JJS B-Entity
of IN I-Entity
the DT I-Entity
infected JJ I-Entity
hosts NNS I-Entity
are VBP I-Entity
cut VBN I-Entity
off RP I-Entity
from IN I-Entity
the DT I-Entity
outside JJ I-Entity
world NN I-Entity
, , O
it PRP B-Entity
only RB B-Action
needs VBZ I-Action
one CD B-Entity
host NN I-Entity
to TO I-Entity
be VB I-Entity
connected JJ I-Entity
online NN I-Entity
. . O

The DT B-Entity
traffic NN I-Entity
is VBZ B-Action
then RB I-Action
routed VBN I-Action
through IN B-Modifier
that DT B-Entity
host NN I-Entity
to TO O
make VB B-Action
external JJ B-Entity
control NN I-Entity
and CC O
data NN B-Entity
exfiltration NN I-Entity
still RB B-Entity
possible JJ I-Entity
. . O

The DT B-Entity
presence NN I-Entity
of IN I-Entity
the DT I-Entity
reconnaissance NN I-Entity
tool NN I-Entity
in IN I-Entity
the DT I-Entity
Snake NNP I-Entity
operators NNS I-Entity
' POS I-Entity
framework NN I-Entity
suggests VBZ B-Action
the DT B-Entity
existence NN I-Entity
of IN I-Entity
an DT I-Entity
arsenal NN I-Entity
of IN I-Entity
infiltration NN I-Entity
tools NNS I-Entity
, , O
designed VBN O
to TO O
compromise VB B-Action
a DT B-Entity
system NN I-Entity
, , O
then RB O
find VB O
a DT O
way NN O
to TO O
replicate VB B-Action
into IN B-Modifier
other JJ B-Entity
hosts NNS I-Entity
, , O
infect VB B-Action
them PRP B-Entity
, , O
and CC O
spread VBD B-Action
the DT B-Entity
infection NN I-Entity
even RB B-Entity
further RBR I-Entity
. . O

As IN O
demonstrated VBN O
, , O
the DT B-Entity
backdoor JJ I-Entity
commands NNS I-Entity
allow VBP B-Action
Snake NNP B-Entity
to TO O
provide VB B-Action
remote JJ B-Entity
attackers NNS I-Entity
with IN B-Modifier
full JJ B-Entity
remote JJ I-Entity
access NN I-Entity
to TO I-Entity
the DT I-Entity
compromised VBN I-Entity
system NN I-Entity
. . O

Its PRP$ O
ability NN O
to TO O
hibernate VB B-Action
, , O
staying VBG B-Action
fully RB B-Entity
inactive JJ I-Entity
for IN B-Modifier
a DT B-Entity
number NN I-Entity
of IN I-Entity
days NNS I-Entity
, , O
makes VBZ B-Action
its PRP$ B-Entity
detection NN I-Entity
during IN I-Entity
that DT I-Entity
time NN I-Entity
very RB B-Entity
difficult JJ I-Entity
. . O

The DT O
analysed JJ O
code NN O
suggests VBZ O
that IN O
even RB O
file VB O
system NN O
and CC O
registry NN O
operations NNS O
can MD O
be VB O
delegated VBN O
by IN O
an DT O
infected JJ O
module NN O
to TO O
another DT O
module NN O
in IN O
order NN O
to TO O
stay VB B-Action
unnoticed JJ B-Entity
by IN B-Modifier
behaviour NN B-Entity
analysis NN I-Entity
engines NNS I-Entity
of IN I-Entity
the DT I-Entity
antivirus JJ I-Entity
products NNS I-Entity
, , O
and CC O
to TO O
overcome VB B-Action
account NN B-Entity
restrictions NNS I-Entity
of IN I-Entity
the DT I-Entity
browser NN I-Entity
processes NNS I-Entity
so IN O
that IN O
the DT B-Entity
injected VBN I-Entity
module NN I-Entity
could MD O
still RB O
write VB B-Action
into IN B-Modifier
files NNS B-Entity
and CC O
into IN B-Modifier
the DT B-Entity
sensitive JJ I-Entity
registry NN I-Entity
hives NNS I-Entity
. . O

The DT B-Entity
logs NNS I-Entity
and CC I-Entity
dumps VBZ I-Entity
it PRP B-Entity
creates VBZ B-Action
on IN B-Modifier
the DT B-Entity
hidden JJ I-Entity
virtual JJ I-Entity
volumes NNS I-Entity
contributes VBZ O
to TO O
its PRP$ O
stealthiness NN O
too RB O
. . O

A DT O
great JJ O
deal NN O
of IN O
attention NN O
has VBZ O
also RB O
been VBN O
given VBN O
to TO O
keep VB B-Action
its PRP$ B-Entity
network NN I-Entity
communications NNS I-Entity
as RB B-Entity
quiet JJ I-Entity
as IN I-Entity
possible JJ I-Entity
. . O

Its PRP$ O
ability NN O
to TO O
generate VB B-Action
malicious JJ B-Entity
traffic NN I-Entity
whenever WRB B-Modifier
the DT B-Entity
user NN I-Entity
goes VBZ I-Entity
online NN I-Entity
and CC I-Entity
start VB I-Entity
loading VBG I-Entity
the DT I-Entity
web NN I-Entity
pages NNS I-Entity
allows VBZ O
it PRP B-Entity
to TO O
'blend FW B-Action
in FW I-Action
' '' I-Action
with IN B-Modifier
the DT B-Entity
legitimate JJ I-Entity
communications NNS I-Entity
. . O

We PRP O
expect VBP O
much RB O
more RBR O
will MD O
be VB O
uncovered VBN O
by IN O
researchers NNS O
in IN O
the DT O
coming VBG O
weeks NNS O
as IN O
the DT O
capabilities NNS O
of IN O
this DT O
operation NN O
are VBP O
further RB O
fleshed VBN O
out RP O
. . O

However RB O
, , O
as IN O
we PRP O
implied VBD O
in IN O
the DT O
opening NN O
section NN O
, , O
we PRP O
view VBP O
this DT O
threat NN O
to TO O
be VB O
a DT O
permanent JJ O
feature NN O
of IN O
the DT O
landscape NN O
. . O

Whether NNP O
they PRP O
dismantle VBP O
this DT O
toolset NN O
and CC O
start VB O
from IN O
scratch NN O
, , O
or CC O
continue VB O
using VBG O
tools NNS O
which WDT O
have VBP O
been VBN O
exposed VBN O
, , O
remains VBZ O
to TO O
be VB O
seen VBN O
. . O

For IN O
their PRP$ O
targets NNS O
though IN O
the DT O
considerable JJ O
challenge NN O
of IN O
keeping VBG O
secrets NNS O
safe JJ O
on IN O
sensitive JJ O
networks NNS O
will MD O
certainly RB O
continue VB O
for IN O
years NNS O
to TO O
come VB O
. . O

